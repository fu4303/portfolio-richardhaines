{"expireTime":9007200851906807000,"key":"gatsby-plugin-mdx-entire-payload-7ab5f5732d638fc512e05c0086be3540-","val":{"mdast":{"type":"root","children":[{"type":"import","value":"import Text from \"./posts-components/linear-gradient-text.js\";\nimport AccentBox from \"../src/components/site/blog/accent-box.js\";","position":{"start":{"line":2,"column":1,"offset":2},"end":{"line":3,"column":67,"offset":132},"indent":[1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"How to add a linear gradient background to text.","position":{"start":{"line":5,"column":4,"offset":139},"end":{"line":5,"column":52,"offset":187},"indent":[]}}],"position":{"start":{"line":5,"column":1,"offset":136},"end":{"line":5,"column":52,"offset":187},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"I was looking to add the Harry Potter Hogwarts houses colours to each of the houses names on mouse hover. The solution was surprisingly simple, after a little googling.","position":{"start":{"line":7,"column":1,"offset":191},"end":{"line":7,"column":169,"offset":359},"indent":[]}}],"position":{"start":{"line":7,"column":1,"offset":191},"end":{"line":7,"column":169,"offset":359},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Linear gradient text","position":{"start":{"line":9,"column":5,"offset":367},"end":{"line":9,"column":25,"offset":387},"indent":[]}}],"position":{"start":{"line":9,"column":1,"offset":363},"end":{"line":9,"column":25,"offset":387},"indent":[]}},{"type":"code","lang":"css","meta":null,"value":".gradientText {\nbackground-image: linear-gradient(\n    90deg,\n    rgba(127, 9, 9, 1) 0%,\n    rgba(255, 197, 0, 1) 12%,\n    rgba(238, 225, 23, 1) 24%\n    );\nbackground-size: 100%;\nbackground-repeat: repeat;\n-webkit-background-clip: text;\n-webkit-text-fill-color: transparent;","position":{"start":{"line":11,"column":1,"offset":391},"end":{"line":23,"column":4,"offset":688},"indent":[1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"code","lang":"jsx","meta":null,"value":"function GradientText() {\n  return <p className=\"styles.gradientText\">Check out my beautiful colours!</p>;\n}","position":{"start":{"line":25,"column":1,"offset":692},"end":{"line":29,"column":4,"offset":815},"indent":[1,1,1,1]}},{"type":"jsx","value":"<Text>Check out my beautiful colours!</Text>\n<AccentBox>\n  Note that styled components cant handle/don't have access to\n  -webkit-text-fill-color. (please shoot me a message if im wrong about this).\n  We can of course use any styled library to do the same thing by creating a\n  styled component and using that instead of the p element.\n</AccentBox>","position":{"start":{"line":31,"column":1,"offset":819},"end":{"line":37,"column":13,"offset":1173},"indent":[1,1,1,1,1,1]}},{"type":"code","lang":"jsx","meta":null,"value":"const Text = styled.p`\n  background-image: linear-gradient(\n    90deg,\n    rgba(127, 9, 9, 1) 0%,\n    rgba(255, 197, 0, 1) 12%,\n    rgba(238, 225, 23, 1) 24%,\n    rgba(13, 98, 23, 1) 48%,\n    rgba(0, 10, 144, 1) 72%\n  );\n  background-size: 100%;\n  background-repeat: repeat;\n  -webkit-background-clip: text;\n  -webkit-text-fill-color: transparent;\n`;","position":{"start":{"line":39,"column":1,"offset":1177},"end":{"line":54,"column":4,"offset":1553},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"code","lang":"jsx","meta":null,"value":"function GradientText() {\n  return <Text>Gaze at my beauty......</Text>;\n}","position":{"start":{"line":56,"column":1,"offset":1557},"end":{"line":60,"column":4,"offset":1646},"indent":[1,1,1,1]}},{"type":"jsx","value":"<Text>Gaze at my beauty......</Text>","position":{"start":{"line":62,"column":1,"offset":1650},"end":{"line":62,"column":37,"offset":1686},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Thanks for reading!","position":{"start":{"line":64,"column":1,"offset":1690},"end":{"line":64,"column":20,"offset":1709},"indent":[]}}],"position":{"start":{"line":64,"column":1,"offset":1690},"end":{"line":64,"column":20,"offset":1709},"indent":[]}},{"type":"export","value":"export const _frontmatter = {\"title\":\"Text with linear gradient background\",\"date\":\"2020-04-07T00:00:00.000Z\",\"published\":true,\"category\":\"CSS\",\"author\":\"Richard Haines\",\"keywords\":[\"css\",\"linear gradient\",\"linear gradient background\",\"Text with linear gradient background\"],\"pin\":false}","position":{"start":{"line":67,"column":1,"offset":1713},"end":{"line":67,"column":288,"offset":2000},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":67,"column":288,"offset":2000}}},"scopeImports":["import Text from \"./posts-components/linear-gradient-text.js\";","import AccentBox from \"../src/components/site/blog/accent-box.js\";","import React from 'react'"],"scopeIdentifiers":["Text","AccentBox","React"],"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Text with linear gradient background\",\n  \"date\": \"2020-04-07T00:00:00.000Z\",\n  \"published\": true,\n  \"category\": \"CSS\",\n  \"author\": \"Richard Haines\",\n  \"keywords\": [\"css\", \"linear gradient\", \"linear gradient background\", \"Text with linear gradient background\"],\n  \"pin\": false\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", {\n    \"id\": \"how-to-add-a-linear-gradient-background-to-text\"\n  }, \"How to add a linear gradient background to text.\"), mdx(\"p\", null, \"I was looking to add the Harry Potter Hogwarts houses colours to each of the houses names on mouse hover. The solution was surprisingly simple, after a little googling.\"), mdx(\"h3\", {\n    \"id\": \"linear-gradient-text\"\n  }, \"Linear gradient text\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-css\"\n  }), \".gradientText {\\nbackground-image: linear-gradient(\\n    90deg,\\n    rgba(127, 9, 9, 1) 0%,\\n    rgba(255, 197, 0, 1) 12%,\\n    rgba(238, 225, 23, 1) 24%\\n    );\\nbackground-size: 100%;\\nbackground-repeat: repeat;\\n-webkit-background-clip: text;\\n-webkit-text-fill-color: transparent;\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \"function GradientText() {\\n  return <p className=\\\"styles.gradientText\\\">Check out my beautiful colours!</p>;\\n}\\n\")), mdx(Text, {\n    mdxType: \"Text\"\n  }, \"Check out my beautiful colours!\"), mdx(AccentBox, {\n    mdxType: \"AccentBox\"\n  }, \"Note that styled components cant handle/don't have access to -webkit-text-fill-color. (please shoot me a message if im wrong about this). We can of course use any styled library to do the same thing by creating a styled component and using that instead of the p element.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \"const Text = styled.p`\\n  background-image: linear-gradient(\\n    90deg,\\n    rgba(127, 9, 9, 1) 0%,\\n    rgba(255, 197, 0, 1) 12%,\\n    rgba(238, 225, 23, 1) 24%,\\n    rgba(13, 98, 23, 1) 48%,\\n    rgba(0, 10, 144, 1) 72%\\n  );\\n  background-size: 100%;\\n  background-repeat: repeat;\\n  -webkit-background-clip: text;\\n  -webkit-text-fill-color: transparent;\\n`;\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \"function GradientText() {\\n  return <Text>Gaze at my beauty......</Text>;\\n}\\n\")), mdx(Text, {\n    mdxType: \"Text\"\n  }, \"Gaze at my beauty......\"), mdx(\"p\", null, \"Thanks for reading!\"));\n}\n;\nMDXContent.isMDXComponent = true;","rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\nimport Text from \"./posts-components/linear-gradient-text.js\";\nimport AccentBox from \"../src/components/site/blog/accent-box.js\";\nexport const _frontmatter = {\n  \"title\": \"Text with linear gradient background\",\n  \"date\": \"2020-04-07T00:00:00.000Z\",\n  \"published\": true,\n  \"category\": \"CSS\",\n  \"author\": \"Richard Haines\",\n  \"keywords\": [\"css\", \"linear gradient\", \"linear gradient background\", \"Text with linear gradient background\"],\n  \"pin\": false\n};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h2 {...{\n      \"id\": \"how-to-add-a-linear-gradient-background-to-text\"\n    }}>{`How to add a linear gradient background to text.`}</h2>\n    <p>{`I was looking to add the Harry Potter Hogwarts houses colours to each of the houses names on mouse hover. The solution was surprisingly simple, after a little googling.`}</p>\n    <h3 {...{\n      \"id\": \"linear-gradient-text\"\n    }}>{`Linear gradient text`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-css\"\n      }}>{`.gradientText {\nbackground-image: linear-gradient(\n    90deg,\n    rgba(127, 9, 9, 1) 0%,\n    rgba(255, 197, 0, 1) 12%,\n    rgba(238, 225, 23, 1) 24%\n    );\nbackground-size: 100%;\nbackground-repeat: repeat;\n-webkit-background-clip: text;\n-webkit-text-fill-color: transparent;\n`}</code></pre>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`function GradientText() {\n  return <p className=\"styles.gradientText\">Check out my beautiful colours!</p>;\n}\n`}</code></pre>\n    <Text mdxType=\"Text\">Check out my beautiful colours!</Text>\n    <AccentBox mdxType=\"AccentBox\">\n  Note that styled components cant handle/don't have access to\n  -webkit-text-fill-color. (please shoot me a message if im wrong about this).\n  We can of course use any styled library to do the same thing by creating a\n  styled component and using that instead of the p element.\n    </AccentBox>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`const Text = styled.p\\`\n  background-image: linear-gradient(\n    90deg,\n    rgba(127, 9, 9, 1) 0%,\n    rgba(255, 197, 0, 1) 12%,\n    rgba(238, 225, 23, 1) 24%,\n    rgba(13, 98, 23, 1) 48%,\n    rgba(0, 10, 144, 1) 72%\n  );\n  background-size: 100%;\n  background-repeat: repeat;\n  -webkit-background-clip: text;\n  -webkit-text-fill-color: transparent;\n\\`;\n`}</code></pre>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`function GradientText() {\n  return <Text>Gaze at my beauty......</Text>;\n}\n`}</code></pre>\n    <Text mdxType=\"Text\">Gaze at my beauty......</Text>\n    <p>{`Thanks for reading!`}</p>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}