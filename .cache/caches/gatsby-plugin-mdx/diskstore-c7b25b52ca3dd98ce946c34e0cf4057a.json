{"expireTime":9007200851906807000,"key":"gatsby-plugin-mdx-entire-payload-25a60dba3d0ff556f367fdbeb94c2f6c-","val":{"mdast":{"type":"root","children":[{"type":"heading","depth":2,"children":[{"type":"text","value":"The basics","position":{"start":{"line":2,"column":4,"offset":5},"end":{"line":2,"column":14,"offset":15},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":2},"end":{"line":2,"column":14,"offset":15},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"I'm trying to up my css and animation game, this is a record of my notes taken while looking into ","position":{"start":{"line":4,"column":1,"offset":19},"end":{"line":4,"column":99,"offset":117},"indent":[]}},{"type":"link","title":null,"url":"https://greensock.com/gsap/","children":[{"type":"text","value":"GSAP","position":{"start":{"line":4,"column":100,"offset":118},"end":{"line":4,"column":104,"offset":122},"indent":[]}}],"position":{"start":{"line":4,"column":99,"offset":117},"end":{"line":4,"column":134,"offset":152},"indent":[]}},{"type":"text","value":". I'll constantly be adding to it as I go. The main purpose of this record is a reference for me to use while updating my site using GSAP (gsap)","position":{"start":{"line":4,"column":134,"offset":152},"end":{"line":4,"column":278,"offset":296},"indent":[]}}],"position":{"start":{"line":4,"column":1,"offset":19},"end":{"line":4,"column":278,"offset":296},"indent":[]}},{"type":"thematicBreak","position":{"start":{"line":6,"column":1,"offset":300},"end":{"line":6,"column":27,"offset":326},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The gsap object has three helpful methods for creating tweens and optionally adding them to timelines. A timeline is a container for multiple tweens. Each tweens is called a child of the timeline.","position":{"start":{"line":8,"column":1,"offset":330},"end":{"line":8,"column":197,"offset":526},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":330},"end":{"line":8,"column":197,"offset":526},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"gsap.to()","position":{"start":{"line":10,"column":3,"offset":532},"end":{"line":10,"column":12,"offset":541},"indent":[]}}],"position":{"start":{"line":10,"column":3,"offset":532},"end":{"line":10,"column":12,"offset":541},"indent":[]}}],"position":{"start":{"line":10,"column":1,"offset":530},"end":{"line":10,"column":12,"offset":541},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"gsap.from()","position":{"start":{"line":11,"column":3,"offset":545},"end":{"line":11,"column":14,"offset":556},"indent":[]}}],"position":{"start":{"line":11,"column":3,"offset":545},"end":{"line":11,"column":14,"offset":556},"indent":[]}}],"position":{"start":{"line":11,"column":1,"offset":543},"end":{"line":11,"column":14,"offset":556},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"gsap.fromTo()","position":{"start":{"line":12,"column":3,"offset":560},"end":{"line":12,"column":16,"offset":573},"indent":[]}}],"position":{"start":{"line":12,"column":3,"offset":560},"end":{"line":12,"column":16,"offset":573},"indent":[]}}],"position":{"start":{"line":12,"column":1,"offset":558},"end":{"line":12,"column":16,"offset":573},"indent":[]}}],"position":{"start":{"line":10,"column":1,"offset":530},"end":{"line":12,"column":16,"offset":573},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"For best performance animate CSS transforms and opacities.","position":{"start":{"line":14,"column":1,"offset":577},"end":{"line":14,"column":59,"offset":635},"indent":[]}}],"position":{"start":{"line":14,"column":1,"offset":577},"end":{"line":14,"column":59,"offset":635},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"x and y","position":{"start":{"line":15,"column":3,"offset":639},"end":{"line":15,"column":10,"offset":646},"indent":[]}}],"position":{"start":{"line":15,"column":3,"offset":639},"end":{"line":15,"column":10,"offset":646},"indent":[]}}],"position":{"start":{"line":15,"column":1,"offset":637},"end":{"line":15,"column":10,"offset":646},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"rotation, rotationX, rotationY","position":{"start":{"line":16,"column":3,"offset":650},"end":{"line":16,"column":33,"offset":680},"indent":[]}}],"position":{"start":{"line":16,"column":3,"offset":650},"end":{"line":16,"column":33,"offset":680},"indent":[]}}],"position":{"start":{"line":16,"column":1,"offset":648},"end":{"line":16,"column":33,"offset":680},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"scaleX, scaleY, scale","position":{"start":{"line":17,"column":3,"offset":684},"end":{"line":17,"column":24,"offset":705},"indent":[]}}],"position":{"start":{"line":17,"column":3,"offset":684},"end":{"line":17,"column":24,"offset":705},"indent":[]}}],"position":{"start":{"line":17,"column":1,"offset":682},"end":{"line":17,"column":24,"offset":705},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"skewX, skewY","position":{"start":{"line":18,"column":3,"offset":709},"end":{"line":18,"column":15,"offset":721},"indent":[]}}],"position":{"start":{"line":18,"column":3,"offset":709},"end":{"line":18,"column":15,"offset":721},"indent":[]}}],"position":{"start":{"line":18,"column":1,"offset":707},"end":{"line":18,"column":15,"offset":721},"indent":[]}}],"position":{"start":{"line":15,"column":1,"offset":637},"end":{"line":18,"column":15,"offset":721},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Though gsap can animate any numeric property. So not display for example.","position":{"start":{"line":20,"column":1,"offset":725},"end":{"line":20,"column":74,"offset":798},"indent":[]}}],"position":{"start":{"line":20,"column":1,"offset":725},"end":{"line":20,"column":74,"offset":798},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"width, height","position":{"start":{"line":21,"column":3,"offset":802},"end":{"line":21,"column":16,"offset":815},"indent":[]}}],"position":{"start":{"line":21,"column":3,"offset":802},"end":{"line":21,"column":16,"offset":815},"indent":[]}}],"position":{"start":{"line":21,"column":1,"offset":800},"end":{"line":21,"column":16,"offset":815},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"top, left (position must be set to relative, fixed or absolute)","position":{"start":{"line":22,"column":3,"offset":819},"end":{"line":22,"column":66,"offset":882},"indent":[]}}],"position":{"start":{"line":22,"column":3,"offset":819},"end":{"line":22,"column":66,"offset":882},"indent":[]}}],"position":{"start":{"line":22,"column":1,"offset":817},"end":{"line":22,"column":66,"offset":882},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"borderRadius","position":{"start":{"line":23,"column":3,"offset":886},"end":{"line":23,"column":15,"offset":898},"indent":[]}}],"position":{"start":{"line":23,"column":3,"offset":886},"end":{"line":23,"column":15,"offset":898},"indent":[]}}],"position":{"start":{"line":23,"column":1,"offset":884},"end":{"line":23,"column":15,"offset":898},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"colors","position":{"start":{"line":24,"column":3,"offset":902},"end":{"line":24,"column":9,"offset":908},"indent":[]}}],"position":{"start":{"line":24,"column":3,"offset":902},"end":{"line":24,"column":9,"offset":908},"indent":[]}}],"position":{"start":{"line":24,"column":1,"offset":900},"end":{"line":24,"column":9,"offset":908},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"viewport values","position":{"start":{"line":25,"column":3,"offset":912},"end":{"line":25,"column":18,"offset":927},"indent":[]}}],"position":{"start":{"line":25,"column":3,"offset":912},"end":{"line":25,"column":18,"offset":927},"indent":[]}}],"position":{"start":{"line":25,"column":1,"offset":910},"end":{"line":25,"column":18,"offset":927},"indent":[]}}],"position":{"start":{"line":21,"column":1,"offset":800},"end":{"line":25,"column":18,"offset":927},"indent":[1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"gsap.to()","position":{"start":{"line":27,"column":4,"offset":934},"end":{"line":27,"column":13,"offset":943},"indent":[]}}],"position":{"start":{"line":27,"column":1,"offset":931},"end":{"line":27,"column":13,"offset":943},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"// The fist param is the target to animate. This could be a className, which would specifically target any element with that className applied.\ngsap.to(\".target\");\n\n// Or an actual HTML tag which would select all of them on the page. I guess a ref could be used in React\ngsap.to(\"img\");\n\n// This will move the target element 500 pixels along the x axis for a duration of 3 seconds (the default duration is 500ms, if not set)\n// The fist param is the target to animate\n// The second is the vars object that contains the properties to animate\ngsap.to(\".target\", {x: 500, duration: 3});\n\n// A tween can change multiple properties over a period of time\n// The target will move across the x axis for a duration of 3 seconds while scaling up 3 times its size, rotating a full 360 degrees and changing its colour to tomato\ngsap.to(\".target\", {x: 500, scale: 3, rotation: 360, fill:\"tomato\", duration: 3});\n\n// A tween can change multiple properties of multiple elements too. If multiple elements have the className .target then all three would move the same as declared above\n// If the stagger property is added, as below, then each of the elements animations would fire off with a 1 second delay between them\ngsap.to(\".target\", {stagger: 1, x: 500, scale: 3, rotation: 360, fill:\"tomato\", duration: 3});\n","position":{"start":{"line":29,"column":1,"offset":947},"end":{"line":49,"column":4,"offset":2276},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"gsap.from() and gsap.fromTo()","position":{"start":{"line":51,"column":4,"offset":2283},"end":{"line":51,"column":33,"offset":2312},"indent":[]}}],"position":{"start":{"line":51,"column":1,"offset":2280},"end":{"line":51,"column":33,"offset":2312},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"\n// The from tween will do the reverse of the to tween, so the target will start at x: 500 and have a scale of 3 but will spin 360 and shrink while returning to the original position on the page taking a duration of 3 seconds\ngsap.from(\".target\", {x: 500, scale: 3, rotation: 360, duration: 3});\n\n// The fromTo tween lets you set the start and end values\n// The first vars object is the from values and the second is the to values\n// The properties in the var objects from and to don't have to match up\ngsap.fromTo(\".target\", {x: 100, y: 250}, {x: 200, y: 300, scale: 3, duration: 2})\n\n// If you set the opacity to 0 on the from and don't set it to 1 in the to then it wont appear as it doesn't know that you want to animate it to opacity 1\ngsap.fromTo(\".target\", {x: 100, y: 250, opacity: 0}, {x: 200, y: 300, scale: 3, duration: 2})\n","position":{"start":{"line":53,"column":1,"offset":2316},"end":{"line":66,"column":4,"offset":3175},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"repeat and delay","position":{"start":{"line":68,"column":4,"offset":3182},"end":{"line":68,"column":20,"offset":3198},"indent":[]}}],"position":{"start":{"line":68,"column":1,"offset":3179},"end":{"line":68,"column":20,"offset":3198},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"\n// The repeat and delay properties can be added. They are pretty self explanatory.\n// Repeat will run the animation for the given number of times, delay will delay the animation for the given number of seconds\ngsap.to(\".target\", {x: 500, duration: 3, repeat: 2});\ngsap.to(\".target\", {x: 500, duration: 3, delay: 2});\n\n// You can add the boolean yoyo with a repeat to make the animation repeat the given number of times in a yoyo motion. \n// So it wont just snap back like if using just repeat\ngsap.to(\".target\", {x: 500, duration: 3, repeat: 2, yoyo: true});\n\n// To repeat infinitely use -1 as the repeat value\ngsap.to(\".target\", {x: 500, duration: 3, repeat: -1, yoyo: true});\n","position":{"start":{"line":70,"column":1,"offset":3202},"end":{"line":84,"column":4,"offset":3906},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"easing","position":{"start":{"line":86,"column":4,"offset":3913},"end":{"line":86,"column":10,"offset":3919},"indent":[]}}],"position":{"start":{"line":86,"column":1,"offset":3910},"end":{"line":86,"column":10,"offset":3919},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The default setting for ease is easeOut. See ","position":{"start":{"line":88,"column":1,"offset":3923},"end":{"line":88,"column":46,"offset":3968},"indent":[]}},{"type":"link","title":null,"url":"https://greensock.com/docs/v2/Easing","children":[{"type":"text","value":"GSAP Easing","position":{"start":{"line":88,"column":47,"offset":3969},"end":{"line":88,"column":58,"offset":3980},"indent":[]}}],"position":{"start":{"line":88,"column":46,"offset":3968},"end":{"line":88,"column":97,"offset":4019},"indent":[]}},{"type":"text","value":" for examples of them all. On that page there is a graph whihc shows how the animations run. The steeper the curve, the faster the animation, or movement. The flatter the curve, the slower the animation or movement.","position":{"start":{"line":88,"column":97,"offset":4019},"end":{"line":88,"column":312,"offset":4234},"indent":[]}}],"position":{"start":{"line":88,"column":1,"offset":3923},"end":{"line":88,"column":312,"offset":4234},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Ease types: ","position":{"start":{"line":90,"column":1,"offset":4238},"end":{"line":90,"column":13,"offset":4250},"indent":[]}}],"position":{"start":{"line":90,"column":1,"offset":4238},"end":{"line":90,"column":13,"offset":4250},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"in","position":{"start":{"line":91,"column":3,"offset":4254},"end":{"line":91,"column":5,"offset":4256},"indent":[]}}],"position":{"start":{"line":91,"column":3,"offset":4254},"end":{"line":91,"column":5,"offset":4256},"indent":[]}}],"position":{"start":{"line":91,"column":1,"offset":4252},"end":{"line":91,"column":5,"offset":4256},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"inOut","position":{"start":{"line":92,"column":3,"offset":4260},"end":{"line":92,"column":8,"offset":4265},"indent":[]}}],"position":{"start":{"line":92,"column":3,"offset":4260},"end":{"line":92,"column":8,"offset":4265},"indent":[]}}],"position":{"start":{"line":92,"column":1,"offset":4258},"end":{"line":92,"column":8,"offset":4265},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"out","position":{"start":{"line":93,"column":3,"offset":4269},"end":{"line":93,"column":6,"offset":4272},"indent":[]}}],"position":{"start":{"line":93,"column":3,"offset":4269},"end":{"line":93,"column":6,"offset":4272},"indent":[]}}],"position":{"start":{"line":93,"column":1,"offset":4267},"end":{"line":93,"column":6,"offset":4272},"indent":[]}}],"position":{"start":{"line":91,"column":1,"offset":4252},"end":{"line":93,"column":6,"offset":4272},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":" You don't have to specify out as it's implied seeing as it's the default ","position":{"start":{"line":95,"column":3,"offset":4278},"end":{"line":95,"column":77,"offset":4352},"indent":[]}}],"position":{"start":{"line":95,"column":1,"offset":4276},"end":{"line":95,"column":79,"offset":4354},"indent":[]}}],"position":{"start":{"line":95,"column":1,"offset":4276},"end":{"line":95,"column":79,"offset":4354},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"These can be combined with: ","position":{"start":{"line":97,"column":1,"offset":4358},"end":{"line":97,"column":29,"offset":4386},"indent":[]}}],"position":{"start":{"line":97,"column":1,"offset":4358},"end":{"line":97,"column":29,"offset":4386},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"power0","position":{"start":{"line":98,"column":3,"offset":4390},"end":{"line":98,"column":9,"offset":4396},"indent":[]}}],"position":{"start":{"line":98,"column":3,"offset":4390},"end":{"line":98,"column":9,"offset":4396},"indent":[]}}],"position":{"start":{"line":98,"column":1,"offset":4388},"end":{"line":98,"column":9,"offset":4396},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"power1","position":{"start":{"line":99,"column":3,"offset":4400},"end":{"line":99,"column":9,"offset":4406},"indent":[]}}],"position":{"start":{"line":99,"column":3,"offset":4400},"end":{"line":99,"column":9,"offset":4406},"indent":[]}}],"position":{"start":{"line":99,"column":1,"offset":4398},"end":{"line":99,"column":9,"offset":4406},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"power2","position":{"start":{"line":100,"column":3,"offset":4410},"end":{"line":100,"column":9,"offset":4416},"indent":[]}}],"position":{"start":{"line":100,"column":3,"offset":4410},"end":{"line":100,"column":9,"offset":4416},"indent":[]}}],"position":{"start":{"line":100,"column":1,"offset":4408},"end":{"line":100,"column":9,"offset":4416},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"power3","position":{"start":{"line":101,"column":3,"offset":4420},"end":{"line":101,"column":9,"offset":4426},"indent":[]}}],"position":{"start":{"line":101,"column":3,"offset":4420},"end":{"line":101,"column":9,"offset":4426},"indent":[]}}],"position":{"start":{"line":101,"column":1,"offset":4418},"end":{"line":101,"column":9,"offset":4426},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"power4","position":{"start":{"line":102,"column":3,"offset":4430},"end":{"line":102,"column":9,"offset":4436},"indent":[]}}],"position":{"start":{"line":102,"column":3,"offset":4430},"end":{"line":102,"column":9,"offset":4436},"indent":[]}}],"position":{"start":{"line":102,"column":1,"offset":4428},"end":{"line":102,"column":9,"offset":4436},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"back","position":{"start":{"line":103,"column":3,"offset":4440},"end":{"line":103,"column":7,"offset":4444},"indent":[]}}],"position":{"start":{"line":103,"column":3,"offset":4440},"end":{"line":103,"column":7,"offset":4444},"indent":[]}}],"position":{"start":{"line":103,"column":1,"offset":4438},"end":{"line":103,"column":7,"offset":4444},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"elastic","position":{"start":{"line":104,"column":3,"offset":4448},"end":{"line":104,"column":10,"offset":4455},"indent":[]}}],"position":{"start":{"line":104,"column":3,"offset":4448},"end":{"line":104,"column":10,"offset":4455},"indent":[]}}],"position":{"start":{"line":104,"column":1,"offset":4446},"end":{"line":104,"column":10,"offset":4455},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"bounce","position":{"start":{"line":105,"column":3,"offset":4459},"end":{"line":105,"column":9,"offset":4465},"indent":[]}}],"position":{"start":{"line":105,"column":3,"offset":4459},"end":{"line":105,"column":9,"offset":4465},"indent":[]}}],"position":{"start":{"line":105,"column":1,"offset":4457},"end":{"line":105,"column":9,"offset":4465},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"rough","position":{"start":{"line":106,"column":3,"offset":4469},"end":{"line":106,"column":8,"offset":4474},"indent":[]}}],"position":{"start":{"line":106,"column":3,"offset":4469},"end":{"line":106,"column":8,"offset":4474},"indent":[]}}],"position":{"start":{"line":106,"column":1,"offset":4467},"end":{"line":106,"column":8,"offset":4474},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"slowMo","position":{"start":{"line":107,"column":3,"offset":4478},"end":{"line":107,"column":9,"offset":4484},"indent":[]}}],"position":{"start":{"line":107,"column":3,"offset":4478},"end":{"line":107,"column":9,"offset":4484},"indent":[]}}],"position":{"start":{"line":107,"column":1,"offset":4476},"end":{"line":107,"column":9,"offset":4484},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"stepped","position":{"start":{"line":108,"column":3,"offset":4488},"end":{"line":108,"column":10,"offset":4495},"indent":[]}}],"position":{"start":{"line":108,"column":3,"offset":4488},"end":{"line":108,"column":10,"offset":4495},"indent":[]}}],"position":{"start":{"line":108,"column":1,"offset":4486},"end":{"line":108,"column":10,"offset":4495},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"circ","position":{"start":{"line":109,"column":3,"offset":4499},"end":{"line":109,"column":7,"offset":4503},"indent":[]}}],"position":{"start":{"line":109,"column":3,"offset":4499},"end":{"line":109,"column":7,"offset":4503},"indent":[]}}],"position":{"start":{"line":109,"column":1,"offset":4497},"end":{"line":109,"column":7,"offset":4503},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"expo","position":{"start":{"line":110,"column":3,"offset":4507},"end":{"line":110,"column":7,"offset":4511},"indent":[]}}],"position":{"start":{"line":110,"column":3,"offset":4507},"end":{"line":110,"column":7,"offset":4511},"indent":[]}}],"position":{"start":{"line":110,"column":1,"offset":4505},"end":{"line":110,"column":7,"offset":4511},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"sine","position":{"start":{"line":111,"column":3,"offset":4515},"end":{"line":111,"column":7,"offset":4519},"indent":[]}}],"position":{"start":{"line":111,"column":3,"offset":4515},"end":{"line":111,"column":7,"offset":4519},"indent":[]}}],"position":{"start":{"line":111,"column":1,"offset":4513},"end":{"line":111,"column":7,"offset":4519},"indent":[]}}],"position":{"start":{"line":98,"column":1,"offset":4388},"end":{"line":111,"column":7,"offset":4519},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"code","lang":"js","meta":null,"value":"\n// If you add ease linear then it removes the easing\ngsap.to(\".target\", {x: 200, ease: \"linear\"});\n\n// There 3 types of ease that can be combined via dot notation with different types of animation, causing different effects\n// For example\ngsap.to(\".target\", {x: 300, duration: 3, ease:\"bounce.inOut\"})\n\n// Back will overshoot the end point and bounce back slightly. Back takes a function param which specifies how much it will overshoot the end point and bounce back again\ngsap.to(\".target\", {x: 300, duration: 3, ease:\"back(3)\"})\n\n","position":{"start":{"line":113,"column":1,"offset":4523},"end":{"line":126,"column":4,"offset":5080},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"stagger","position":{"start":{"line":128,"column":4,"offset":5087},"end":{"line":128,"column":11,"offset":5094},"indent":[]}}],"position":{"start":{"line":128,"column":1,"offset":5084},"end":{"line":128,"column":11,"offset":5094},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Used to stagger a group of elements animations.","position":{"start":{"line":130,"column":1,"offset":5098},"end":{"line":130,"column":48,"offset":5145},"indent":[]}}],"position":{"start":{"line":130,"column":1,"offset":5098},"end":{"line":130,"column":48,"offset":5145},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"// If you have a number of elements with the className .target then this will stagger the animations 1 second apart\ngsap.to(\".target\", {x: 350, stagger: 1});\n\n// For a really subtle stagger you can lower the stagger amount\ngsap.to(\".target\", {x: 350, stagger: 0.2});\n\n// Stagger can take an object instead of just a numerical value. Inside this object you can pass some params\n// Passing each with a numerical value will work the same as just passing a numerical value to stagger. \n// So in this example each element will fire after 0.2 second, the same as the above implementation\ngsap.to(\".target\", {x: 350, stagger: {\n    each: 0.2\n}});\n\n// You can also pass amount as a param, which will make each element in the group share the numerical value.\n// If we had 5 elements in our group, each animation would fire for a total of 1 second, so the gap in between would be shorter \n// but the whole groups animation would take 1 second\ngsap.to(\".target\", {x: 350, stagger: {\n    amount: 1\n}});\n\n// From can be used to tell gsap from where to begin the stagger. You can pass the array position\ngsap.to(\".target\", {x: 350, stagger: {\n    from: 2\n}});\n\n// Or you can pass some string values. (Random was added in v3.1.0)\ngsap.to(\".target\", {x: 350, stagger: {\n    from: \"start\" || \"center\" || \"edges\" || \"end\" || \"random\"\n}});\n\n// This looks cool, if your elements are visually in a grid on the page you can pass grid as a param, indicating how many rows and columns there are. \ngsap.to(\".target\", {x: 350, stagger: {\n    grid: [3,4] // 3 rows, 4 columns\n}});\n\n// Or you can pass auto to grid and gsap will calculate the rows and columns using element.getBoundingClientRect()\ngsap.to(\".target\", {x: 350, stagger: {\n    grid: \"auto\"\n}});\n\n// If you have a grid you can focus on just one axis (x or y)\ngsap.to(\".target\", {x: 350, stagger: {\n    grid: \"auto\",\n    from: \"center\",\n    axis: \"y\"\n}});\n\n// A cool example from the gsap website. If you have a grid of boxes then you can make them fall away from the center\ngsap.to(\".box\", {\n  duration: 1,\n  scale: 0.1,\n  y: 40,\n  ease: \"power1.inOut\",\n\n  stagger: {\n    grid: [7,15],\n    from: \"center\",\n    amount: 1.5\n  }\n});\n\n// And of course you can add an ease (if you don't the default is out remember) that distributes the start times of the animations\ngsap.to(\".target\", {x: 350, stagger: {\n    grid: \"auto\",\n    from: \"center\",\n    axis: \"y\",\n    ease: \"power2.in\"\n}});","position":{"start":{"line":132,"column":1,"offset":5149},"end":{"line":201,"column":4,"offset":7644},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"export","value":"export const _frontmatter = {\"title\":\"Notes on GSAP\",\"date\":\"2020-05-26T00:00:00.000Z\",\"published\":true,\"category\":\"Animation\",\"author\":\"Richard Haines\",\"keywords\":[\"greensock\",\"gsap\",\"beginner\",\"animation\"],\"pin\":true}","position":{"start":{"line":203,"column":1,"offset":7646},"end":{"line":203,"column":220,"offset":7865},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":203,"column":220,"offset":7865}}},"scopeImports":["import React from 'react'"],"scopeIdentifiers":["React"],"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Notes on GSAP\",\n  \"date\": \"2020-05-26T00:00:00.000Z\",\n  \"published\": true,\n  \"category\": \"Animation\",\n  \"author\": \"Richard Haines\",\n  \"keywords\": [\"greensock\", \"gsap\", \"beginner\", \"animation\"],\n  \"pin\": true\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", {\n    \"id\": \"the-basics\"\n  }, \"The basics\"), mdx(\"p\", null, \"I'm trying to up my css and animation game, this is a record of my notes taken while looking into \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://greensock.com/gsap/\"\n  }), \"GSAP\"), \". I'll constantly be adding to it as I go. The main purpose of this record is a reference for me to use while updating my site using GSAP (gsap)\"), mdx(\"hr\", null), mdx(\"p\", null, \"The gsap object has three helpful methods for creating tweens and optionally adding them to timelines. A timeline is a container for multiple tweens. Each tweens is called a child of the timeline.\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"gsap.to()\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"gsap.from()\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"gsap.fromTo()\")), mdx(\"p\", null, \"For best performance animate CSS transforms and opacities.\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"x and y\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"rotation, rotationX, rotationY\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"scaleX, scaleY, scale\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"skewX, skewY\")), mdx(\"p\", null, \"Though gsap can animate any numeric property. So not display for example.\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"width, height\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"top, left (position must be set to relative, fixed or absolute)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"borderRadius\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"colors\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"viewport values\")), mdx(\"h2\", {\n    \"id\": \"gsapto\"\n  }, \"gsap.to()\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"// The fist param is the target to animate. This could be a className, which would specifically target any element with that className applied.\\ngsap.to(\\\".target\\\");\\n\\n// Or an actual HTML tag which would select all of them on the page. I guess a ref could be used in React\\ngsap.to(\\\"img\\\");\\n\\n// This will move the target element 500 pixels along the x axis for a duration of 3 seconds (the default duration is 500ms, if not set)\\n// The fist param is the target to animate\\n// The second is the vars object that contains the properties to animate\\ngsap.to(\\\".target\\\", {x: 500, duration: 3});\\n\\n// A tween can change multiple properties over a period of time\\n// The target will move across the x axis for a duration of 3 seconds while scaling up 3 times its size, rotating a full 360 degrees and changing its colour to tomato\\ngsap.to(\\\".target\\\", {x: 500, scale: 3, rotation: 360, fill:\\\"tomato\\\", duration: 3});\\n\\n// A tween can change multiple properties of multiple elements too. If multiple elements have the className .target then all three would move the same as declared above\\n// If the stagger property is added, as below, then each of the elements animations would fire off with a 1 second delay between them\\ngsap.to(\\\".target\\\", {stagger: 1, x: 500, scale: 3, rotation: 360, fill:\\\"tomato\\\", duration: 3});\\n\\n\")), mdx(\"h2\", {\n    \"id\": \"gsapfrom-and-gsapfromto\"\n  }, \"gsap.from() and gsap.fromTo()\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"\\n// The from tween will do the reverse of the to tween, so the target will start at x: 500 and have a scale of 3 but will spin 360 and shrink while returning to the original position on the page taking a duration of 3 seconds\\ngsap.from(\\\".target\\\", {x: 500, scale: 3, rotation: 360, duration: 3});\\n\\n// The fromTo tween lets you set the start and end values\\n// The first vars object is the from values and the second is the to values\\n// The properties in the var objects from and to don't have to match up\\ngsap.fromTo(\\\".target\\\", {x: 100, y: 250}, {x: 200, y: 300, scale: 3, duration: 2})\\n\\n// If you set the opacity to 0 on the from and don't set it to 1 in the to then it wont appear as it doesn't know that you want to animate it to opacity 1\\ngsap.fromTo(\\\".target\\\", {x: 100, y: 250, opacity: 0}, {x: 200, y: 300, scale: 3, duration: 2})\\n\\n\")), mdx(\"h2\", {\n    \"id\": \"repeat-and-delay\"\n  }, \"repeat and delay\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"\\n// The repeat and delay properties can be added. They are pretty self explanatory.\\n// Repeat will run the animation for the given number of times, delay will delay the animation for the given number of seconds\\ngsap.to(\\\".target\\\", {x: 500, duration: 3, repeat: 2});\\ngsap.to(\\\".target\\\", {x: 500, duration: 3, delay: 2});\\n\\n// You can add the boolean yoyo with a repeat to make the animation repeat the given number of times in a yoyo motion. \\n// So it wont just snap back like if using just repeat\\ngsap.to(\\\".target\\\", {x: 500, duration: 3, repeat: 2, yoyo: true});\\n\\n// To repeat infinitely use -1 as the repeat value\\ngsap.to(\\\".target\\\", {x: 500, duration: 3, repeat: -1, yoyo: true});\\n\\n\")), mdx(\"h2\", {\n    \"id\": \"easing\"\n  }, \"easing\"), mdx(\"p\", null, \"The default setting for ease is easeOut. See \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://greensock.com/docs/v2/Easing\"\n  }), \"GSAP Easing\"), \" for examples of them all. On that page there is a graph whihc shows how the animations run. The steeper the curve, the faster the animation, or movement. The flatter the curve, the slower the animation or movement.\"), mdx(\"p\", null, \"Ease types: \"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"in\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"inOut\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"out\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \" You don't have to specify out as it's implied seeing as it's the default \")), mdx(\"p\", null, \"These can be combined with: \"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"power0\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"power1\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"power2\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"power3\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"power4\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"back\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"elastic\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"bounce\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"rough\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"slowMo\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"stepped\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"circ\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"expo\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"sine\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"\\n// If you add ease linear then it removes the easing\\ngsap.to(\\\".target\\\", {x: 200, ease: \\\"linear\\\"});\\n\\n// There 3 types of ease that can be combined via dot notation with different types of animation, causing different effects\\n// For example\\ngsap.to(\\\".target\\\", {x: 300, duration: 3, ease:\\\"bounce.inOut\\\"})\\n\\n// Back will overshoot the end point and bounce back slightly. Back takes a function param which specifies how much it will overshoot the end point and bounce back again\\ngsap.to(\\\".target\\\", {x: 300, duration: 3, ease:\\\"back(3)\\\"})\\n\\n\\n\")), mdx(\"h2\", {\n    \"id\": \"stagger\"\n  }, \"stagger\"), mdx(\"p\", null, \"Used to stagger a group of elements animations.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"// If you have a number of elements with the className .target then this will stagger the animations 1 second apart\\ngsap.to(\\\".target\\\", {x: 350, stagger: 1});\\n\\n// For a really subtle stagger you can lower the stagger amount\\ngsap.to(\\\".target\\\", {x: 350, stagger: 0.2});\\n\\n// Stagger can take an object instead of just a numerical value. Inside this object you can pass some params\\n// Passing each with a numerical value will work the same as just passing a numerical value to stagger. \\n// So in this example each element will fire after 0.2 second, the same as the above implementation\\ngsap.to(\\\".target\\\", {x: 350, stagger: {\\n    each: 0.2\\n}});\\n\\n// You can also pass amount as a param, which will make each element in the group share the numerical value.\\n// If we had 5 elements in our group, each animation would fire for a total of 1 second, so the gap in between would be shorter \\n// but the whole groups animation would take 1 second\\ngsap.to(\\\".target\\\", {x: 350, stagger: {\\n    amount: 1\\n}});\\n\\n// From can be used to tell gsap from where to begin the stagger. You can pass the array position\\ngsap.to(\\\".target\\\", {x: 350, stagger: {\\n    from: 2\\n}});\\n\\n// Or you can pass some string values. (Random was added in v3.1.0)\\ngsap.to(\\\".target\\\", {x: 350, stagger: {\\n    from: \\\"start\\\" || \\\"center\\\" || \\\"edges\\\" || \\\"end\\\" || \\\"random\\\"\\n}});\\n\\n// This looks cool, if your elements are visually in a grid on the page you can pass grid as a param, indicating how many rows and columns there are. \\ngsap.to(\\\".target\\\", {x: 350, stagger: {\\n    grid: [3,4] // 3 rows, 4 columns\\n}});\\n\\n// Or you can pass auto to grid and gsap will calculate the rows and columns using element.getBoundingClientRect()\\ngsap.to(\\\".target\\\", {x: 350, stagger: {\\n    grid: \\\"auto\\\"\\n}});\\n\\n// If you have a grid you can focus on just one axis (x or y)\\ngsap.to(\\\".target\\\", {x: 350, stagger: {\\n    grid: \\\"auto\\\",\\n    from: \\\"center\\\",\\n    axis: \\\"y\\\"\\n}});\\n\\n// A cool example from the gsap website. If you have a grid of boxes then you can make them fall away from the center\\ngsap.to(\\\".box\\\", {\\n  duration: 1,\\n  scale: 0.1,\\n  y: 40,\\n  ease: \\\"power1.inOut\\\",\\n\\n  stagger: {\\n    grid: [7,15],\\n    from: \\\"center\\\",\\n    amount: 1.5\\n  }\\n});\\n\\n// And of course you can add an ease (if you don't the default is out remember) that distributes the start times of the animations\\ngsap.to(\\\".target\\\", {x: 350, stagger: {\\n    grid: \\\"auto\\\",\\n    from: \\\"center\\\",\\n    axis: \\\"y\\\",\\n    ease: \\\"power2.in\\\"\\n}});\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nexport const _frontmatter = {\n  \"title\": \"Notes on GSAP\",\n  \"date\": \"2020-05-26T00:00:00.000Z\",\n  \"published\": true,\n  \"category\": \"Animation\",\n  \"author\": \"Richard Haines\",\n  \"keywords\": [\"greensock\", \"gsap\", \"beginner\", \"animation\"],\n  \"pin\": true\n};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h2 {...{\n      \"id\": \"the-basics\"\n    }}>{`The basics`}</h2>\n    <p>{`I'm trying to up my css and animation game, this is a record of my notes taken while looking into `}<a parentName=\"p\" {...{\n        \"href\": \"https://greensock.com/gsap/\"\n      }}>{`GSAP`}</a>{`. I'll constantly be adding to it as I go. The main purpose of this record is a reference for me to use while updating my site using GSAP (gsap)`}</p>\n    <hr></hr>\n    <p>{`The gsap object has three helpful methods for creating tweens and optionally adding them to timelines. A timeline is a container for multiple tweens. Each tweens is called a child of the timeline.`}</p>\n    <ul>\n      <li parentName=\"ul\">{`gsap.to()`}</li>\n      <li parentName=\"ul\">{`gsap.from()`}</li>\n      <li parentName=\"ul\">{`gsap.fromTo()`}</li>\n    </ul>\n    <p>{`For best performance animate CSS transforms and opacities.`}</p>\n    <ul>\n      <li parentName=\"ul\">{`x and y`}</li>\n      <li parentName=\"ul\">{`rotation, rotationX, rotationY`}</li>\n      <li parentName=\"ul\">{`scaleX, scaleY, scale`}</li>\n      <li parentName=\"ul\">{`skewX, skewY`}</li>\n    </ul>\n    <p>{`Though gsap can animate any numeric property. So not display for example.`}</p>\n    <ul>\n      <li parentName=\"ul\">{`width, height`}</li>\n      <li parentName=\"ul\">{`top, left (position must be set to relative, fixed or absolute)`}</li>\n      <li parentName=\"ul\">{`borderRadius`}</li>\n      <li parentName=\"ul\">{`colors`}</li>\n      <li parentName=\"ul\">{`viewport values`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"gsapto\"\n    }}>{`gsap.to()`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`// The fist param is the target to animate. This could be a className, which would specifically target any element with that className applied.\ngsap.to(\".target\");\n\n// Or an actual HTML tag which would select all of them on the page. I guess a ref could be used in React\ngsap.to(\"img\");\n\n// This will move the target element 500 pixels along the x axis for a duration of 3 seconds (the default duration is 500ms, if not set)\n// The fist param is the target to animate\n// The second is the vars object that contains the properties to animate\ngsap.to(\".target\", {x: 500, duration: 3});\n\n// A tween can change multiple properties over a period of time\n// The target will move across the x axis for a duration of 3 seconds while scaling up 3 times its size, rotating a full 360 degrees and changing its colour to tomato\ngsap.to(\".target\", {x: 500, scale: 3, rotation: 360, fill:\"tomato\", duration: 3});\n\n// A tween can change multiple properties of multiple elements too. If multiple elements have the className .target then all three would move the same as declared above\n// If the stagger property is added, as below, then each of the elements animations would fire off with a 1 second delay between them\ngsap.to(\".target\", {stagger: 1, x: 500, scale: 3, rotation: 360, fill:\"tomato\", duration: 3});\n\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"gsapfrom-and-gsapfromto\"\n    }}>{`gsap.from() and gsap.fromTo()`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`\n// The from tween will do the reverse of the to tween, so the target will start at x: 500 and have a scale of 3 but will spin 360 and shrink while returning to the original position on the page taking a duration of 3 seconds\ngsap.from(\".target\", {x: 500, scale: 3, rotation: 360, duration: 3});\n\n// The fromTo tween lets you set the start and end values\n// The first vars object is the from values and the second is the to values\n// The properties in the var objects from and to don't have to match up\ngsap.fromTo(\".target\", {x: 100, y: 250}, {x: 200, y: 300, scale: 3, duration: 2})\n\n// If you set the opacity to 0 on the from and don't set it to 1 in the to then it wont appear as it doesn't know that you want to animate it to opacity 1\ngsap.fromTo(\".target\", {x: 100, y: 250, opacity: 0}, {x: 200, y: 300, scale: 3, duration: 2})\n\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"repeat-and-delay\"\n    }}>{`repeat and delay`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`\n// The repeat and delay properties can be added. They are pretty self explanatory.\n// Repeat will run the animation for the given number of times, delay will delay the animation for the given number of seconds\ngsap.to(\".target\", {x: 500, duration: 3, repeat: 2});\ngsap.to(\".target\", {x: 500, duration: 3, delay: 2});\n\n// You can add the boolean yoyo with a repeat to make the animation repeat the given number of times in a yoyo motion. \n// So it wont just snap back like if using just repeat\ngsap.to(\".target\", {x: 500, duration: 3, repeat: 2, yoyo: true});\n\n// To repeat infinitely use -1 as the repeat value\ngsap.to(\".target\", {x: 500, duration: 3, repeat: -1, yoyo: true});\n\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"easing\"\n    }}>{`easing`}</h2>\n    <p>{`The default setting for ease is easeOut. See `}<a parentName=\"p\" {...{\n        \"href\": \"https://greensock.com/docs/v2/Easing\"\n      }}>{`GSAP Easing`}</a>{` for examples of them all. On that page there is a graph whihc shows how the animations run. The steeper the curve, the faster the animation, or movement. The flatter the curve, the slower the animation or movement.`}</p>\n    <p>{`Ease types: `}</p>\n    <ul>\n      <li parentName=\"ul\">{`in`}</li>\n      <li parentName=\"ul\">{`inOut`}</li>\n      <li parentName=\"ul\">{`out`}</li>\n    </ul>\n    <p><strong parentName=\"p\">{` You don't have to specify out as it's implied seeing as it's the default `}</strong></p>\n    <p>{`These can be combined with: `}</p>\n    <ul>\n      <li parentName=\"ul\">{`power0`}</li>\n      <li parentName=\"ul\">{`power1`}</li>\n      <li parentName=\"ul\">{`power2`}</li>\n      <li parentName=\"ul\">{`power3`}</li>\n      <li parentName=\"ul\">{`power4`}</li>\n      <li parentName=\"ul\">{`back`}</li>\n      <li parentName=\"ul\">{`elastic`}</li>\n      <li parentName=\"ul\">{`bounce`}</li>\n      <li parentName=\"ul\">{`rough`}</li>\n      <li parentName=\"ul\">{`slowMo`}</li>\n      <li parentName=\"ul\">{`stepped`}</li>\n      <li parentName=\"ul\">{`circ`}</li>\n      <li parentName=\"ul\">{`expo`}</li>\n      <li parentName=\"ul\">{`sine`}</li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`\n// If you add ease linear then it removes the easing\ngsap.to(\".target\", {x: 200, ease: \"linear\"});\n\n// There 3 types of ease that can be combined via dot notation with different types of animation, causing different effects\n// For example\ngsap.to(\".target\", {x: 300, duration: 3, ease:\"bounce.inOut\"})\n\n// Back will overshoot the end point and bounce back slightly. Back takes a function param which specifies how much it will overshoot the end point and bounce back again\ngsap.to(\".target\", {x: 300, duration: 3, ease:\"back(3)\"})\n\n\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"stagger\"\n    }}>{`stagger`}</h2>\n    <p>{`Used to stagger a group of elements animations.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`// If you have a number of elements with the className .target then this will stagger the animations 1 second apart\ngsap.to(\".target\", {x: 350, stagger: 1});\n\n// For a really subtle stagger you can lower the stagger amount\ngsap.to(\".target\", {x: 350, stagger: 0.2});\n\n// Stagger can take an object instead of just a numerical value. Inside this object you can pass some params\n// Passing each with a numerical value will work the same as just passing a numerical value to stagger. \n// So in this example each element will fire after 0.2 second, the same as the above implementation\ngsap.to(\".target\", {x: 350, stagger: {\n    each: 0.2\n}});\n\n// You can also pass amount as a param, which will make each element in the group share the numerical value.\n// If we had 5 elements in our group, each animation would fire for a total of 1 second, so the gap in between would be shorter \n// but the whole groups animation would take 1 second\ngsap.to(\".target\", {x: 350, stagger: {\n    amount: 1\n}});\n\n// From can be used to tell gsap from where to begin the stagger. You can pass the array position\ngsap.to(\".target\", {x: 350, stagger: {\n    from: 2\n}});\n\n// Or you can pass some string values. (Random was added in v3.1.0)\ngsap.to(\".target\", {x: 350, stagger: {\n    from: \"start\" || \"center\" || \"edges\" || \"end\" || \"random\"\n}});\n\n// This looks cool, if your elements are visually in a grid on the page you can pass grid as a param, indicating how many rows and columns there are. \ngsap.to(\".target\", {x: 350, stagger: {\n    grid: [3,4] // 3 rows, 4 columns\n}});\n\n// Or you can pass auto to grid and gsap will calculate the rows and columns using element.getBoundingClientRect()\ngsap.to(\".target\", {x: 350, stagger: {\n    grid: \"auto\"\n}});\n\n// If you have a grid you can focus on just one axis (x or y)\ngsap.to(\".target\", {x: 350, stagger: {\n    grid: \"auto\",\n    from: \"center\",\n    axis: \"y\"\n}});\n\n// A cool example from the gsap website. If you have a grid of boxes then you can make them fall away from the center\ngsap.to(\".box\", {\n  duration: 1,\n  scale: 0.1,\n  y: 40,\n  ease: \"power1.inOut\",\n\n  stagger: {\n    grid: [7,15],\n    from: \"center\",\n    amount: 1.5\n  }\n});\n\n// And of course you can add an ease (if you don't the default is out remember) that distributes the start times of the animations\ngsap.to(\".target\", {x: 350, stagger: {\n    grid: \"auto\",\n    from: \"center\",\n    axis: \"y\",\n    ease: \"power2.in\"\n}});\n`}</code></pre>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}