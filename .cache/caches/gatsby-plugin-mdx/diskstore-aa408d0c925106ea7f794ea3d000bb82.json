{"expireTime":9007200851906807000,"key":"gatsby-plugin-mdx-entire-payload-95519c564855b6d352ca7dccedcaca3c-","val":{"mdast":{"type":"root","children":[{"type":"import","value":"import AccentBox from \"../src/components/site/blog/accent-box.js\";","position":{"start":{"line":2,"column":1,"offset":2},"end":{"line":2,"column":67,"offset":68},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"How to add theme-ui to NEXTjs","position":{"start":{"line":4,"column":4,"offset":75},"end":{"line":4,"column":33,"offset":104},"indent":[]}}],"position":{"start":{"line":4,"column":1,"offset":72},"end":{"line":4,"column":33,"offset":104},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Today i decided to finally take the plunge and start learning ","position":{"start":{"line":6,"column":1,"offset":108},"end":{"line":6,"column":63,"offset":170},"indent":[]}},{"type":"link","title":null,"url":"https://nextjs.org/","children":[{"type":"text","value":"NEXTjs","position":{"start":{"line":6,"column":64,"offset":171},"end":{"line":6,"column":70,"offset":177},"indent":[]}}],"position":{"start":{"line":6,"column":63,"offset":170},"end":{"line":6,"column":92,"offset":199},"indent":[]}},{"type":"text","value":". I've been working with ","position":{"start":{"line":6,"column":92,"offset":199},"end":{"line":6,"column":117,"offset":224},"indent":[]}},{"type":"link","title":null,"url":"https://www.gatsbyjs.org/","children":[{"type":"text","value":"Gatsby","position":{"start":{"line":6,"column":118,"offset":225},"end":{"line":6,"column":124,"offset":231},"indent":[]}}],"position":{"start":{"line":6,"column":117,"offset":224},"end":{"line":6,"column":152,"offset":259},"indent":[]}},{"type":"text","value":" for two over years now, have created many sites and themes and generally feel very comfortable in that environment. But it was time, finally to bite the bullet and see what all the fuss was about!","position":{"start":{"line":6,"column":152,"offset":259},"end":{"line":6,"column":349,"offset":456},"indent":[]}}],"position":{"start":{"line":6,"column":1,"offset":108},"end":{"line":6,"column":349,"offset":456},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"When i build Gatsby sites i always style them with ","position":{"start":{"line":8,"column":1,"offset":460},"end":{"line":8,"column":52,"offset":511},"indent":[]}},{"type":"link","title":null,"url":"https://theme-ui.com/","children":[{"type":"text","value":"theme-ui","position":{"start":{"line":8,"column":53,"offset":512},"end":{"line":8,"column":61,"offset":520},"indent":[]}}],"position":{"start":{"line":8,"column":52,"offset":511},"end":{"line":8,"column":85,"offset":544},"indent":[]}},{"type":"text","value":". Its my favorite way to style websites as it allows you to globally control your sites styles from one file, lets you work responsively using simple array syntax and works wonderfully well with Gatsby. I was curious though, how would it play with NEXTjs? Would the setup be as simple as with Gatsby? After all, and i quote the corgi master himself ","position":{"start":{"line":8,"column":85,"offset":544},"end":{"line":8,"column":434,"offset":893},"indent":[]}},{"type":"link","title":null,"url":"https://twitter.com/chrisbiscardi","children":[{"type":"text","value":"Chris Biscardi","position":{"start":{"line":8,"column":435,"offset":894},"end":{"line":8,"column":449,"offset":908},"indent":[]}}],"position":{"start":{"line":8,"column":434,"offset":893},"end":{"line":8,"column":485,"offset":944},"indent":[]}},{"type":"text","value":" \"Theme-ui is just a set of react context providers and a pragma\". How hard could it be?","position":{"start":{"line":8,"column":485,"offset":944},"end":{"line":8,"column":573,"offset":1032},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":460},"end":{"line":8,"column":573,"offset":1032},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Well it turns out not very hard, once you have figured it out that is.","position":{"start":{"line":10,"column":1,"offset":1036},"end":{"line":10,"column":71,"offset":1106},"indent":[]}}],"position":{"start":{"line":10,"column":1,"offset":1036},"end":{"line":10,"column":71,"offset":1106},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"I started with the starter ","position":{"start":{"line":12,"column":1,"offset":1110},"end":{"line":12,"column":28,"offset":1137},"indent":[]}},{"type":"link","title":null,"url":"https://nextjs.org/learn/basics/create-nextjs-app","children":[{"type":"text","value":"tutorial","position":{"start":{"line":12,"column":29,"offset":1138},"end":{"line":12,"column":37,"offset":1146},"indent":[]}}],"position":{"start":{"line":12,"column":28,"offset":1137},"end":{"line":12,"column":89,"offset":1198},"indent":[]}},{"type":"text","value":" on the NEXTjs website and got things up and running in no time. Its very impressive NEXTjs, though i haven't dived too deep into it yet. But i digress, when we add theme-ui to our website we generally want to wrap our root element or page with it's context. The only problem was, when i spun up the NEXTjs tutorial example, there was no root element, no app.js. Only a pages folder, some components and a public folder.ðŸ˜•","position":{"start":{"line":12,"column":89,"offset":1198},"end":{"line":12,"column":511,"offset":1620},"indent":[]}}],"position":{"start":{"line":12,"column":1,"offset":1110},"end":{"line":12,"column":511,"offset":1620},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The answer turned out to be overriding the base app.js file and providing the context that way. Lets dive into some code..","position":{"start":{"line":14,"column":1,"offset":1624},"end":{"line":14,"column":123,"offset":1746},"indent":[]}}],"position":{"start":{"line":14,"column":1,"offset":1624},"end":{"line":14,"column":123,"offset":1746},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Install theme-ui","position":{"start":{"line":16,"column":4,"offset":1753},"end":{"line":16,"column":20,"offset":1769},"indent":[]}}],"position":{"start":{"line":16,"column":1,"offset":1750},"end":{"line":16,"column":20,"offset":1769},"indent":[]}},{"type":"code","lang":"bash","meta":null,"value":"yarn add theme-ui","position":{"start":{"line":18,"column":1,"offset":1773},"end":{"line":20,"column":4,"offset":1804},"indent":[1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Create our theme file","position":{"start":{"line":22,"column":4,"offset":1811},"end":{"line":22,"column":25,"offset":1832},"indent":[]}}],"position":{"start":{"line":22,"column":1,"offset":1808},"end":{"line":22,"column":25,"offset":1832},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Create a new folder called components and a file named theme.js","position":{"start":{"line":24,"column":1,"offset":1836},"end":{"line":24,"column":64,"offset":1899},"indent":[]}}],"position":{"start":{"line":24,"column":1,"offset":1836},"end":{"line":24,"column":64,"offset":1899},"indent":[]}},{"type":"code","lang":"bash","meta":null,"value":"mkdir -p components/theme.js","position":{"start":{"line":26,"column":1,"offset":1903},"end":{"line":28,"column":4,"offset":1945},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"We are just going to test if it works by changing the color of some text so no need to add any more than some colors for now.","position":{"start":{"line":30,"column":1,"offset":1949},"end":{"line":30,"column":126,"offset":2074},"indent":[]}}],"position":{"start":{"line":30,"column":1,"offset":1949},"end":{"line":30,"column":126,"offset":2074},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"export default {\n  colors: {\n    text: \"#FFFfff\",\n    background: \"#121212\",\n    primary: \"#000010\",\n    secondary: \"#E7E7E9\",\n    accent: \"#4CEA22\",\n  },\n};","position":{"start":{"line":32,"column":1,"offset":2078},"end":{"line":42,"column":4,"offset":2255},"indent":[1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Overriding the base app.js","position":{"start":{"line":44,"column":4,"offset":2262},"end":{"line":44,"column":30,"offset":2288},"indent":[]}}],"position":{"start":{"line":44,"column":1,"offset":2259},"end":{"line":44,"column":30,"offset":2288},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Create a new file inside of pages and name it ","position":{"start":{"line":46,"column":1,"offset":2292},"end":{"line":46,"column":47,"offset":2338},"indent":[]}},{"type":"text","value":"_","position":{"start":{"line":46,"column":47,"offset":2338},"end":{"line":46,"column":49,"offset":2340},"indent":[]}},{"type":"text","value":"app.js","position":{"start":{"line":46,"column":49,"offset":2340},"end":{"line":46,"column":55,"offset":2346},"indent":[]}}],"position":{"start":{"line":46,"column":1,"offset":2292},"end":{"line":46,"column":55,"offset":2346},"indent":[]}},{"type":"code","lang":"bash","meta":null,"value":"cd pages && touch _app.js","position":{"start":{"line":48,"column":1,"offset":2350},"end":{"line":50,"column":4,"offset":2389},"indent":[1,1]}},{"type":"code","lang":"jsx","meta":null,"value":"import React from \"react\";\nimport { ThemeProvider } from \"theme-ui\";\nimport theme from \"../components/theme\";\n\nconst App = ({ Component, pageProps }) => {\n  return (\n    <ThemeProvider theme={theme}>\n      <Component {...pageProps} />\n    </ThemeProvider>\n  );\n};\n\nexport default App;","position":{"start":{"line":52,"column":1,"offset":2393},"end":{"line":66,"column":4,"offset":2702},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"The docs explain this very well so i will quote them here:","position":{"start":{"line":68,"column":1,"offset":2706},"end":{"line":68,"column":59,"offset":2764},"indent":[]}}],"position":{"start":{"line":68,"column":1,"offset":2706},"end":{"line":68,"column":59,"offset":2764},"indent":[]}},{"type":"jsx","value":"<AccentBox>\n  The Component prop is the active page, so whenever you navigate between\n  routes, Component will change to the new page. Therefore, any props you send\n  to Component will be received by the page.\n</AccentBox>","position":{"start":{"line":70,"column":1,"offset":2768},"end":{"line":74,"column":13,"offset":2994},"indent":[1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Lets try out our new colors! Open the index.js file located in the pages folder and use the sx prop and add a p tag.","position":{"start":{"line":76,"column":1,"offset":2998},"end":{"line":76,"column":117,"offset":3114},"indent":[]}}],"position":{"start":{"line":76,"column":1,"offset":2998},"end":{"line":76,"column":117,"offset":3114},"indent":[]}},{"type":"code","lang":"jsx","meta":null,"value":"import Head from 'next/head'\nimport Link from 'next/link';\n\nexport default function Home() {\n  return (\n    <div className=\"container\">\n      <Head>\n        <title>Create Next App</title>\n        <link rel=\"icon\" href=\"/favicon.ico\" />\n      </Head>\n\n      <main>\n        <h1 className=\"title\">\n          Read <Link  href=\"/posts/first-post\"><a >First Post Page!</a></Link>\n        </h1>\n\n        <p sx={{\n            fontSize: '6em',\n            cursor: 'pointer',\n            \":hover\": {\n              color: 'accent'\n            }\n        }}>TEST</p>\n\n        /* lots and lots of other stuff..... */\n\n        </div>\n      </main>\n\n    </div>\n  )\n}","position":{"start":{"line":78,"column":1,"offset":3118},"end":{"line":111,"column":4,"offset":3812},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Now if we run yarn dev we should see the magic happen....","position":{"start":{"line":113,"column":1,"offset":3816},"end":{"line":113,"column":58,"offset":3873},"indent":[]}}],"position":{"start":{"line":113,"column":1,"offset":3816},"end":{"line":113,"column":58,"offset":3873},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Wait..","position":{"start":{"line":115,"column":1,"offset":3877},"end":{"line":115,"column":7,"offset":3883},"indent":[]}}],"position":{"start":{"line":115,"column":1,"offset":3877},"end":{"line":115,"column":7,"offset":3883},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Nothing happened! ðŸ¥º","position":{"start":{"line":117,"column":1,"offset":3887},"end":{"line":117,"column":21,"offset":3907},"indent":[]}}],"position":{"start":{"line":117,"column":1,"offset":3887},"end":{"line":117,"column":21,"offset":3907},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Thats because we forgot to add the jsx pragma! I spent an hour trying to figure out why it wasn't working and that was the reason.","position":{"start":{"line":119,"column":1,"offset":3911},"end":{"line":119,"column":131,"offset":4041},"indent":[]}}],"position":{"start":{"line":119,"column":1,"offset":3911},"end":{"line":119,"column":131,"offset":4041},"indent":[]}},{"type":"code","lang":"jsx","meta":null,"value":"/** @jsx jsx */\nimport { jsx } from 'theme-ui'\nimport Head from 'next/head'\nimport Link from 'next/link';\n\nexport default function Home() {\n  return (\n    <div className=\"container\">\n      <Head>\n        <title>Create Next App</title>\n        <link rel=\"icon\" href=\"/favicon.ico\" />\n      </Head>\n\n      <main>\n        <h1 className=\"title\">\n          Read <Link  href=\"/posts/first-post\"><a >First Post Page!</a></Link>\n        </h1>\n\n        <p sx={{\n            fontSize: '6em',\n            cursor: 'pointer',\n            \":hover\": {\n              color: 'accent'\n            }\n        }}>TEST</p>\n\n        /* lots and lots of other stuff..... */\n\n        </div>\n      </main>\n\n    </div>\n  )\n}","position":{"start":{"line":121,"column":1,"offset":4045},"end":{"line":156,"column":4,"offset":4788},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"You're welcome ðŸ˜˜","position":{"start":{"line":158,"column":1,"offset":4792},"end":{"line":158,"column":18,"offset":4809},"indent":[]}}],"position":{"start":{"line":158,"column":1,"offset":4792},"end":{"line":158,"column":18,"offset":4809},"indent":[]}},{"type":"export","value":"export const _frontmatter = {\"title\":\"Add Theme-ui to Next\",\"date\":\"2020-04-24T00:00:00.000Z\",\"published\":true,\"category\":\"Theme-ui\",\"author\":\"Richard Haines\",\"keywords\":[\"css\",\"theme-ui\",\"css-in-js\",\"emotion\",\"nextjs\"],\"pin\":false}","position":{"start":{"line":161,"column":1,"offset":4813},"end":{"line":161,"column":233,"offset":5045},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":161,"column":233,"offset":5045}}},"scopeImports":["import AccentBox from \"../src/components/site/blog/accent-box.js\";","import React from 'react'"],"scopeIdentifiers":["AccentBox","React"],"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Add Theme-ui to Next\",\n  \"date\": \"2020-04-24T00:00:00.000Z\",\n  \"published\": true,\n  \"category\": \"Theme-ui\",\n  \"author\": \"Richard Haines\",\n  \"keywords\": [\"css\", \"theme-ui\", \"css-in-js\", \"emotion\", \"nextjs\"],\n  \"pin\": false\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", {\n    \"id\": \"how-to-add-theme-ui-to-nextjs\"\n  }, \"How to add theme-ui to NEXTjs\"), mdx(\"p\", null, \"Today i decided to finally take the plunge and start learning \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://nextjs.org/\"\n  }), \"NEXTjs\"), \". I've been working with \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://www.gatsbyjs.org/\"\n  }), \"Gatsby\"), \" for two over years now, have created many sites and themes and generally feel very comfortable in that environment. But it was time, finally to bite the bullet and see what all the fuss was about!\"), mdx(\"p\", null, \"When i build Gatsby sites i always style them with \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://theme-ui.com/\"\n  }), \"theme-ui\"), \". Its my favorite way to style websites as it allows you to globally control your sites styles from one file, lets you work responsively using simple array syntax and works wonderfully well with Gatsby. I was curious though, how would it play with NEXTjs? Would the setup be as simple as with Gatsby? After all, and i quote the corgi master himself \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://twitter.com/chrisbiscardi\"\n  }), \"Chris Biscardi\"), \" \\\"Theme-ui is just a set of react context providers and a pragma\\\". How hard could it be?\"), mdx(\"p\", null, \"Well it turns out not very hard, once you have figured it out that is.\"), mdx(\"p\", null, \"I started with the starter \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://nextjs.org/learn/basics/create-nextjs-app\"\n  }), \"tutorial\"), \" on the NEXTjs website and got things up and running in no time. Its very impressive NEXTjs, though i haven't dived too deep into it yet. But i digress, when we add theme-ui to our website we generally want to wrap our root element or page with it's context. The only problem was, when i spun up the NEXTjs tutorial example, there was no root element, no app.js. Only a pages folder, some components and a public folder.\\uD83D\\uDE15\"), mdx(\"p\", null, \"The answer turned out to be overriding the base app.js file and providing the context that way. Lets dive into some code..\"), mdx(\"h2\", {\n    \"id\": \"install-theme-ui\"\n  }, \"Install theme-ui\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \"yarn add theme-ui\\n\")), mdx(\"h2\", {\n    \"id\": \"create-our-theme-file\"\n  }, \"Create our theme file\"), mdx(\"p\", null, \"Create a new folder called components and a file named theme.js\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \"mkdir -p components/theme.js\\n\")), mdx(\"p\", null, \"We are just going to test if it works by changing the color of some text so no need to add any more than some colors for now.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"export default {\\n  colors: {\\n    text: \\\"#FFFfff\\\",\\n    background: \\\"#121212\\\",\\n    primary: \\\"#000010\\\",\\n    secondary: \\\"#E7E7E9\\\",\\n    accent: \\\"#4CEA22\\\",\\n  },\\n};\\n\")), mdx(\"h2\", {\n    \"id\": \"overriding-the-base-appjs\"\n  }, \"Overriding the base app.js\"), mdx(\"p\", null, \"Create a new file inside of pages and name it \", \"_\", \"app.js\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \"cd pages && touch _app.js\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \"import React from \\\"react\\\";\\nimport { ThemeProvider } from \\\"theme-ui\\\";\\nimport theme from \\\"../components/theme\\\";\\n\\nconst App = ({ Component, pageProps }) => {\\n  return (\\n    <ThemeProvider theme={theme}>\\n      <Component {...pageProps} />\\n    </ThemeProvider>\\n  );\\n};\\n\\nexport default App;\\n\")), mdx(\"p\", null, \"The docs explain this very well so i will quote them here:\"), mdx(AccentBox, {\n    mdxType: \"AccentBox\"\n  }, \"The Component prop is the active page, so whenever you navigate between routes, Component will change to the new page. Therefore, any props you send to Component will be received by the page.\"), mdx(\"p\", null, \"Lets try out our new colors! Open the index.js file located in the pages folder and use the sx prop and add a p tag.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \"import Head from 'next/head'\\nimport Link from 'next/link';\\n\\nexport default function Home() {\\n  return (\\n    <div className=\\\"container\\\">\\n      <Head>\\n        <title>Create Next App</title>\\n        <link rel=\\\"icon\\\" href=\\\"/favicon.ico\\\" />\\n      </Head>\\n\\n      <main>\\n        <h1 className=\\\"title\\\">\\n          Read <Link  href=\\\"/posts/first-post\\\"><a >First Post Page!</a></Link>\\n        </h1>\\n\\n        <p sx={{\\n            fontSize: '6em',\\n            cursor: 'pointer',\\n            \\\":hover\\\": {\\n              color: 'accent'\\n            }\\n        }}>TEST</p>\\n\\n        /* lots and lots of other stuff..... */\\n\\n        </div>\\n      </main>\\n\\n    </div>\\n  )\\n}\\n\")), mdx(\"p\", null, \"Now if we run yarn dev we should see the magic happen....\"), mdx(\"p\", null, \"Wait..\"), mdx(\"p\", null, \"Nothing happened! \\uD83E\\uDD7A\"), mdx(\"p\", null, \"Thats because we forgot to add the jsx pragma! I spent an hour trying to figure out why it wasn't working and that was the reason.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \"/** @jsx jsx */\\nimport { jsx } from 'theme-ui'\\nimport Head from 'next/head'\\nimport Link from 'next/link';\\n\\nexport default function Home() {\\n  return (\\n    <div className=\\\"container\\\">\\n      <Head>\\n        <title>Create Next App</title>\\n        <link rel=\\\"icon\\\" href=\\\"/favicon.ico\\\" />\\n      </Head>\\n\\n      <main>\\n        <h1 className=\\\"title\\\">\\n          Read <Link  href=\\\"/posts/first-post\\\"><a >First Post Page!</a></Link>\\n        </h1>\\n\\n        <p sx={{\\n            fontSize: '6em',\\n            cursor: 'pointer',\\n            \\\":hover\\\": {\\n              color: 'accent'\\n            }\\n        }}>TEST</p>\\n\\n        /* lots and lots of other stuff..... */\\n\\n        </div>\\n      </main>\\n\\n    </div>\\n  )\\n}\\n\")), mdx(\"p\", null, \"You're welcome \\uD83D\\uDE18\"));\n}\n;\nMDXContent.isMDXComponent = true;","rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\nimport AccentBox from \"../src/components/site/blog/accent-box.js\";\nexport const _frontmatter = {\n  \"title\": \"Add Theme-ui to Next\",\n  \"date\": \"2020-04-24T00:00:00.000Z\",\n  \"published\": true,\n  \"category\": \"Theme-ui\",\n  \"author\": \"Richard Haines\",\n  \"keywords\": [\"css\", \"theme-ui\", \"css-in-js\", \"emotion\", \"nextjs\"],\n  \"pin\": false\n};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h2 {...{\n      \"id\": \"how-to-add-theme-ui-to-nextjs\"\n    }}>{`How to add theme-ui to NEXTjs`}</h2>\n    <p>{`Today i decided to finally take the plunge and start learning `}<a parentName=\"p\" {...{\n        \"href\": \"https://nextjs.org/\"\n      }}>{`NEXTjs`}</a>{`. I've been working with `}<a parentName=\"p\" {...{\n        \"href\": \"https://www.gatsbyjs.org/\"\n      }}>{`Gatsby`}</a>{` for two over years now, have created many sites and themes and generally feel very comfortable in that environment. But it was time, finally to bite the bullet and see what all the fuss was about!`}</p>\n    <p>{`When i build Gatsby sites i always style them with `}<a parentName=\"p\" {...{\n        \"href\": \"https://theme-ui.com/\"\n      }}>{`theme-ui`}</a>{`. Its my favorite way to style websites as it allows you to globally control your sites styles from one file, lets you work responsively using simple array syntax and works wonderfully well with Gatsby. I was curious though, how would it play with NEXTjs? Would the setup be as simple as with Gatsby? After all, and i quote the corgi master himself `}<a parentName=\"p\" {...{\n        \"href\": \"https://twitter.com/chrisbiscardi\"\n      }}>{`Chris Biscardi`}</a>{` \"Theme-ui is just a set of react context providers and a pragma\". How hard could it be?`}</p>\n    <p>{`Well it turns out not very hard, once you have figured it out that is.`}</p>\n    <p>{`I started with the starter `}<a parentName=\"p\" {...{\n        \"href\": \"https://nextjs.org/learn/basics/create-nextjs-app\"\n      }}>{`tutorial`}</a>{` on the NEXTjs website and got things up and running in no time. Its very impressive NEXTjs, though i haven't dived too deep into it yet. But i digress, when we add theme-ui to our website we generally want to wrap our root element or page with it's context. The only problem was, when i spun up the NEXTjs tutorial example, there was no root element, no app.js. Only a pages folder, some components and a public folder.ðŸ˜•`}</p>\n    <p>{`The answer turned out to be overriding the base app.js file and providing the context that way. Lets dive into some code..`}</p>\n    <h2 {...{\n      \"id\": \"install-theme-ui\"\n    }}>{`Install theme-ui`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`yarn add theme-ui\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"create-our-theme-file\"\n    }}>{`Create our theme file`}</h2>\n    <p>{`Create a new folder called components and a file named theme.js`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`mkdir -p components/theme.js\n`}</code></pre>\n    <p>{`We are just going to test if it works by changing the color of some text so no need to add any more than some colors for now.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`export default {\n  colors: {\n    text: \"#FFFfff\",\n    background: \"#121212\",\n    primary: \"#000010\",\n    secondary: \"#E7E7E9\",\n    accent: \"#4CEA22\",\n  },\n};\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"overriding-the-base-appjs\"\n    }}>{`Overriding the base app.js`}</h2>\n    <p>{`Create a new file inside of pages and name it `}{`_`}{`app.js`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`cd pages && touch _app.js\n`}</code></pre>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`import React from \"react\";\nimport { ThemeProvider } from \"theme-ui\";\nimport theme from \"../components/theme\";\n\nconst App = ({ Component, pageProps }) => {\n  return (\n    <ThemeProvider theme={theme}>\n      <Component {...pageProps} />\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n`}</code></pre>\n    <p>{`The docs explain this very well so i will quote them here:`}</p>\n    <AccentBox mdxType=\"AccentBox\">\n  The Component prop is the active page, so whenever you navigate between\n  routes, Component will change to the new page. Therefore, any props you send\n  to Component will be received by the page.\n    </AccentBox>\n    <p>{`Lets try out our new colors! Open the index.js file located in the pages folder and use the sx prop and add a p tag.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`import Head from 'next/head'\nimport Link from 'next/link';\n\nexport default function Home() {\n  return (\n    <div className=\"container\">\n      <Head>\n        <title>Create Next App</title>\n        <link rel=\"icon\" href=\"/favicon.ico\" />\n      </Head>\n\n      <main>\n        <h1 className=\"title\">\n          Read <Link  href=\"/posts/first-post\"><a >First Post Page!</a></Link>\n        </h1>\n\n        <p sx={{\n            fontSize: '6em',\n            cursor: 'pointer',\n            \":hover\": {\n              color: 'accent'\n            }\n        }}>TEST</p>\n\n        /* lots and lots of other stuff..... */\n\n        </div>\n      </main>\n\n    </div>\n  )\n}\n`}</code></pre>\n    <p>{`Now if we run yarn dev we should see the magic happen....`}</p>\n    <p>{`Wait..`}</p>\n    <p>{`Nothing happened! ðŸ¥º`}</p>\n    <p>{`Thats because we forgot to add the jsx pragma! I spent an hour trying to figure out why it wasn't working and that was the reason.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`/** @jsx jsx */\nimport { jsx } from 'theme-ui'\nimport Head from 'next/head'\nimport Link from 'next/link';\n\nexport default function Home() {\n  return (\n    <div className=\"container\">\n      <Head>\n        <title>Create Next App</title>\n        <link rel=\"icon\" href=\"/favicon.ico\" />\n      </Head>\n\n      <main>\n        <h1 className=\"title\">\n          Read <Link  href=\"/posts/first-post\"><a >First Post Page!</a></Link>\n        </h1>\n\n        <p sx={{\n            fontSize: '6em',\n            cursor: 'pointer',\n            \":hover\": {\n              color: 'accent'\n            }\n        }}>TEST</p>\n\n        /* lots and lots of other stuff..... */\n\n        </div>\n      </main>\n\n    </div>\n  )\n}\n`}</code></pre>\n    <p>{`You're welcome ðŸ˜˜`}</p>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}