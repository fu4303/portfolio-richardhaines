{"expireTime":9007200852747636000,"key":"gatsby-plugin-mdx-entire-payload-228f9bd821cf1ff345d74d5c0131ec98-","val":{"mdast":{"type":"root","children":[{"type":"import","value":"import { Box } from \"theme-ui\";\nimport AccentBox from \"../../site/blog/accent-box.js\";\nimport Text from \"../../../../posts/posts-components/linear-gradient-text.js\";","position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":3,"column":79,"offset":167},"indent":[1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Responsive css grid","position":{"start":{"line":5,"column":4,"offset":174},"end":{"line":5,"column":23,"offset":193},"indent":[]}}],"position":{"start":{"line":5,"column":1,"offset":171},"end":{"line":5,"column":23,"offset":193},"indent":[]}},{"type":"code","lang":"jsx","meta":null,"value":"<section\n  sx={{\n    margin: \"2em auto\",\n    display: \"grid\",\n    gridAutoRows: \"auto\",\n    gridTemplateColumns: \"repeat(auto-fill, minmax(auto, 450px))\",\n    gap: \"1.5em\",\n    justifyContent: \"space-evenly\",\n    width: \"100%\"\n  }}\n>\n  <div>Box 1</div>\n  <div>Box 2</div>\n  <div>Box 3</div>\n  <div>Box 4</div>\n</section>","position":{"start":{"line":7,"column":1,"offset":197},"end":{"line":24,"column":4,"offset":545},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":26,"column":1,"offset":549},"end":{"line":26,"column":4,"offset":552},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Linear gradient background to text","position":{"start":{"line":28,"column":4,"offset":559},"end":{"line":28,"column":38,"offset":593},"indent":[]}}],"position":{"start":{"line":28,"column":1,"offset":556},"end":{"line":28,"column":38,"offset":593},"indent":[]}},{"type":"code","lang":"jsx","meta":null,"value":"\n  const GradientText = styled.p`\n  background-image: linear-gradient(\n      90deg,\n      rgba(127, 9, 9, 1) 0%,\n      rgba(255, 197, 0, 1) 12%,\n      rgba(238, 225, 23, 1) 24%\n      );\n  background-size: 100%;\n  background-repeat: repeat;\n  -webkit-background-clip: text;\n  -webkit-text-fill-color: transparent;\n  `\n\n  <GradientText>Check out my beautiful colours!</GradientText>\n","position":{"start":{"line":30,"column":1,"offset":597},"end":{"line":47,"column":4,"offset":1006},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"jsx","value":"<LinearGradientText>Check out my beautiful colours!</LinearGradientText>","position":{"start":{"line":49,"column":1,"offset":1010},"end":{"line":49,"column":73,"offset":1082},"indent":[]}},{"type":"thematicBreak","position":{"start":{"line":51,"column":1,"offset":1086},"end":{"line":51,"column":4,"offset":1089},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Global styles from Emotion","position":{"start":{"line":53,"column":4,"offset":1096},"end":{"line":53,"column":30,"offset":1122},"indent":[]}}],"position":{"start":{"line":53,"column":1,"offset":1093},"end":{"line":53,"column":30,"offset":1122},"indent":[]}},{"type":"code","lang":"jsx","meta":null,"value":"import { Global, css } from \"@emotion/core\";\n\n<Global\n  styles={css`\n    * {\n      margin: 0;\n      padding: 0;\n      box-sizing: border-box;\n    }\n    body {\n      scroll-behavior: smooth;\n      overflow-y: scroll;\n      -webkit-overflow-scrolling: touch;\n      width: 100%;\n      overflow-x: hidden;\n    }\n  `}\n/>;","position":{"start":{"line":55,"column":1,"offset":1126},"end":{"line":74,"column":4,"offset":1472},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":76,"column":1,"offset":1476},"end":{"line":76,"column":4,"offset":1479},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Svg Icon with Theme-ui color mode","position":{"start":{"line":78,"column":4,"offset":1486},"end":{"line":78,"column":37,"offset":1519},"indent":[]}}],"position":{"start":{"line":78,"column":1,"offset":1483},"end":{"line":78,"column":37,"offset":1519},"indent":[]}},{"type":"code","lang":"jsx","meta":null,"value":"/** @jsx jsx */\nimport { jsx, useColorMode } from \"theme-ui\";\nimport Github from \"../../assets/github.svg\";\n\nexport const GithubIcon = () => {\n  const [colorMode] = useColorMode();\n  return (\n    <Github\n      sx={{\n        width: \"1.5em\",\n        height: \"1.5em\",\n        fill: \"accent\",\n        marginBottom: \"1em\",\n        \":hover\": {\n          fill: colorMode === \"light\" ? \"#ffffff\" : \"#000000\"\n        }\n      }}\n    />\n  );\n};","position":{"start":{"line":80,"column":1,"offset":1523},"end":{"line":101,"column":4,"offset":1988},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":103,"column":1,"offset":1992},"end":{"line":103,"column":4,"offset":1995},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Navbar in Gatsby","position":{"start":{"line":105,"column":4,"offset":2002},"end":{"line":105,"column":20,"offset":2018},"indent":[]}}],"position":{"start":{"line":105,"column":1,"offset":1999},"end":{"line":105,"column":20,"offset":2018},"indent":[]}},{"type":"code","lang":"jsx","meta":null,"value":"/** @jsx jsx */\nimport { jsx } from \"theme-ui\";\nimport { Link } from \"gatsby\";\n\nconst Nav = () => {\n  const { siteName } = useSiteMetadata();\n  return (\n    <nav\n      sx={{\n        display: \"flex\",\n        justifyContent: [\"center\", \"space-between\", \"space-around\"],\n        alignItems: \"center\",\n        width: \"100%\",\n        height: \"100%\",\n        position: \"relative\"\n      }}\n    >\n      <Link\n        sx={{\n          textDecoration: \"none\",\n          fontFamily: \"heading\",\n          fontSize: [\"0.8em\", \"0.9em\", \"1em\"],\n          color: \"text\",\n          paddingTop: [\"1em\", null, null],\n          letterSpacing: \"text\",\n          \":hover\": {\n            color: \"accent\"\n          }\n        }}\n        to=\"/\"\n      >\n        {siteName}\n      </Link>\n      <Link\n        sx={{\n          textDecoration: \"none\",\n          fontFamily: \"heading\",\n          fontSize: [\"0.8em\", \"0.9em\", \"0.9em\"],\n          color: \"text\",\n          paddingTop: [\"1em\", null, null],\n          letterSpacing: \"text\",\n          textTransform: \"uppercase\",\n          display: [\"none\", \"block\", \"block\"],\n          \":hover\": {\n            color: \"accent\"\n          }\n        }}\n        to=\"/copy-paste\"\n      >\n        Copy/Paste\n      </Link>\n    </nav>\n  );\n};","position":{"start":{"line":107,"column":1,"offset":2022},"end":{"line":162,"column":4,"offset":3332},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":164,"column":1,"offset":3336},"end":{"line":164,"column":4,"offset":3339},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Theme-ui preset","position":{"start":{"line":166,"column":4,"offset":3346},"end":{"line":166,"column":19,"offset":3361},"indent":[]}}],"position":{"start":{"line":166,"column":1,"offset":3343},"end":{"line":166,"column":19,"offset":3361},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"export default {\n  initialColorMode: \"dark\",\n  useCustomProperties: false,\n  fonts: {\n    body: \"Jost\",\n    heading: \"Jost\"\n  },\n  fontWeights: {\n    body: 300,\n    heading: 400,\n    bold: 700\n  },\n  lineHeights: {\n    body: \"110%\",\n    heading: 1.125,\n    tagline: \"100px\"\n  },\n  letterSpacing: {\n    body: \"1px\",\n    text: \"5px\"\n  },\n  colors: {\n    text: \"#FFFfff\",\n    background: \"#121212\",\n    primary: \"#000010\",\n    secondary: \"#E7E7E9\",\n    secondaryDarker: \"#0F1218\",\n    accent: \"#DE3C4B\",\n    modes: {\n      dark: {\n        text: \"#000010\",\n        background: \"#E7E7E9\",\n        primary: \"#000010\",\n        secondary: \"#E7E7E9\",\n        secondaryDarker: \"#0F1218\",\n        accent: \"#DE3C4B\"\n      }\n    }\n  },\n  breakpoints: [\"40em\", \"56em\", \"64em\"]\n};","position":{"start":{"line":168,"column":1,"offset":3365},"end":{"line":210,"column":4,"offset":4182},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":212,"column":1,"offset":4186},"end":{"line":212,"column":4,"offset":4189},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Breakpoints areas for grid","position":{"start":{"line":214,"column":4,"offset":4196},"end":{"line":214,"column":30,"offset":4222},"indent":[]}}],"position":{"start":{"line":214,"column":1,"offset":4193},"end":{"line":214,"column":30,"offset":4222},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"export const PhoneTemplateAreas = `\n  'nav      nav     nav     nav'\n  'main     main    main    main'\n  'footer   footer  footer  footer'\n`;\n\nexport const TabletTemplateAreas = `\n  'nav      nav     nav     nav     nav     nav'\n  'main     main    main    main    main    main'\n  'footer   footer  footer  footer  footer  footer'\n`;\n\nexport const DesktopTemplateAreas = `\n  '.    nav      nav     nav     nav     nav     nav    .'\n  '.    main     main    main    main    main    main   .'\n  '.    footer   footer  footer  footer  footer  footer .'\n`;","position":{"start":{"line":216,"column":1,"offset":4226},"end":{"line":234,"column":4,"offset":4806},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":236,"column":1,"offset":4810},"end":{"line":236,"column":4,"offset":4813},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Set up Apollo with Gatsby and Netlify Functions","position":{"start":{"line":238,"column":4,"offset":4820},"end":{"line":238,"column":51,"offset":4867},"indent":[]}}],"position":{"start":{"line":238,"column":1,"offset":4817},"end":{"line":238,"column":51,"offset":4867},"indent":[]}},{"type":"code","lang":"jsx","meta":null,"value":"// gatsby-browser.js && gatsby-ssr.js\n\nconst React = require(\"react\");\nconst fetch = require(\"isomorphic-fetch\");\nconst {\n  ApolloProvider,\n  ApolloClient,\n  HttpLink,\n  InMemoryCache\n} = require(\"@apollo/client\");\n\nconst client = new ApolloClient({\n  cache: new InMemoryCache(),\n  link: new HttpLink({\n    uri: \"https://my-app.netlify.app/.netlify/functions/graphql\"\n  }),\n  fetch\n});\n\nexport const wrapRootElement = ({ element }) => (\n  <ApolloProvider client={client}>{element}</ApolloProvider>\n);","position":{"start":{"line":240,"column":1,"offset":4871},"end":{"line":263,"column":4,"offset":5405},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":265,"column":1,"offset":5409},"end":{"line":265,"column":4,"offset":5412},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Glitch text","position":{"start":{"line":267,"column":4,"offset":5419},"end":{"line":267,"column":15,"offset":5430},"indent":[]}}],"position":{"start":{"line":267,"column":1,"offset":5416},"end":{"line":267,"column":15,"offset":5430},"indent":[]}},{"type":"code","lang":"jsx","meta":null,"value":"import React from \"react\";\nimport styled from \"@emotion/styled\";\n\nconst Container = styled.div`\n  position: relative;\n\n  &:hover {\n    &:before {\n      content: attr(data-text);\n      position: absolute;\n      top: 0;\n      left: 0;\n      width: 100%;\n      height: 100%;\n\n      left: 2px;\n      text-shadow: -1px 0 #de3c4b;\n      background: #121212;\n\n      overflow: hidden;\n      animation: noise-anim-2 5s infinite linear alternate-reverse;\n    }\n\n    &:after {\n      content: attr(data-text);\n      position: absolute;\n      top: 0;\n      left: 0;\n      width: 100%;\n      height: 100%;\n\n      left: -2px;\n      text-shadow: -1px 0 #de3c4b;\n      background: #121212;\n      overflow: hidden;\n      animation: noise-anim 2s infinite linear alternate-reverse;\n    }\n\n    @keyframes noise-anim {\n      0% {\n        clip-path: inset(100% 0 1% 0);\n      }\n      5% {\n        clip-path: inset(45% 0 41% 0);\n      }\n      10% {\n        clip-path: inset(8% 0 18% 0);\n      }\n      15% {\n        clip-path: inset(94% 0 7% 0);\n      }\n      20% {\n        clip-path: inset(23% 0 69% 0);\n      }\n      25% {\n        clip-path: inset(21% 0 28% 0);\n      }\n      30% {\n        clip-path: inset(92% 0 3% 0);\n      }\n      35% {\n        clip-path: inset(2% 0 35% 0);\n      }\n      40% {\n        clip-path: inset(80% 0 1% 0);\n      }\n      45% {\n        clip-path: inset(75% 0 9% 0);\n      }\n      50% {\n        clip-path: inset(37% 0 3% 0);\n      }\n      55% {\n        clip-path: inset(59% 0 3% 0);\n      }\n      60% {\n        clip-path: inset(26% 0 67% 0);\n      }\n      65% {\n        clip-path: inset(75% 0 19% 0);\n      }\n      70% {\n        clip-path: inset(84% 0 2% 0);\n      }\n      75% {\n        clip-path: inset(92% 0 6% 0);\n      }\n      80% {\n        clip-path: inset(10% 0 58% 0);\n      }\n      85% {\n        clip-path: inset(58% 0 23% 0);\n      }\n      90% {\n        clip-path: inset(20% 0 59% 0);\n      }\n      95% {\n        clip-path: inset(50% 0 32% 0);\n      }\n      100% {\n        clip-path: inset(69% 0 9% 0);\n      }\n    }\n  }\n`;\n\nexport default ({ children }) => {\n  return <Container data-text={children}>{children}</Container>;\n};\n\n<h3>\n  <Glitch>Hover over me and watch me wobble (or click me on mobile)</Glitch>\n</h3>;","position":{"start":{"line":269,"column":1,"offset":5434},"end":{"line":383,"column":4,"offset":7790},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"jsx","value":"<H3>\n  <Glitch>Hover over me and watch me wobble (or click me on mobile)</Glitch>\n</H3>","position":{"start":{"line":385,"column":1,"offset":7794},"end":{"line":387,"column":6,"offset":7883},"indent":[1,1]}},{"type":"thematicBreak","position":{"start":{"line":389,"column":1,"offset":7887},"end":{"line":389,"column":4,"offset":7890},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Load custom font in Gatsby","position":{"start":{"line":391,"column":4,"offset":7897},"end":{"line":391,"column":30,"offset":7923},"indent":[]}}],"position":{"start":{"line":391,"column":1,"offset":7894},"end":{"line":391,"column":30,"offset":7923},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"// gatsby-ssr.js\n\nconst React = require(\"react\");\nexport const onRenderBody = ({ setHeadComponents }) => {\n  setHeadComponents([\n    <link\n      rel=\"stylesheet\"\n      href=\"https://indestructibletype.com/fonts/Jost.css\"\n      type=\"text/css\"\n      charset=\"utf-8\"\n    />\n  ]);\n};\n\n// Can then be accessed like: font-family: Jost in your code","position":{"start":{"line":393,"column":1,"offset":7927},"end":{"line":409,"column":4,"offset":8295},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":411,"column":1,"offset":8299},"end":{"line":411,"column":4,"offset":8302},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Base scripts for Gatsby project","position":{"start":{"line":413,"column":4,"offset":8309},"end":{"line":413,"column":35,"offset":8340},"indent":[]}}],"position":{"start":{"line":413,"column":1,"offset":8306},"end":{"line":413,"column":35,"offset":8340},"indent":[]}},{"type":"code","lang":"json","meta":null,"value":"\n// package.json\n// Assumes you have prettier installed\n\n  \"scripts\": {\n    \"dev\": \"gatsby develop\",\n    \"build\": \"gatsby build\",\n    \"clean\": \"gatsby clean\",\n    \"pretty-check\": \"prettier --check \\\"src/**/*.{js}\\\"\",\n    \"pretty\": \"prettier --write \\\"src/**/*js\\\"\",\n    \"sitemap\": \"gatsby build && gatsby serve\",\n    \"z\": \"gatsby clean && gatsby develop\"\n  },\n    \"prettier\": {\n    \"singleQuote\": false,\n    \"printWidth\": 80,\n    \"proseWrap\": \"always\"\n  }","position":{"start":{"line":415,"column":1,"offset":8344},"end":{"line":434,"column":4,"offset":8830},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"State management w/ context","position":{"start":{"line":436,"column":4,"offset":8837},"end":{"line":436,"column":31,"offset":8864},"indent":[]}}],"position":{"start":{"line":436,"column":1,"offset":8834},"end":{"line":436,"column":31,"offset":8864},"indent":[]}},{"type":"code","lang":"jsx","meta":null,"value":"// Create a your context using a reducer to manage the state\n// Wrap your root component in the exported provider\nimport React from 'react';\n\nexport const StateContext = React.createContext(null);\nexport const DispatchContext = React.createContext(null);\n\nconst initialValues = {\n  name: '',\n  email: '',\n  location: '',\n  description: '',\n  website: '',\n}\n\nconst reducer = (state, action) => {\n  const { type, payload } = action;\n  return { ...state, [type]: payload };\n};\n\nconst Provider = ({ children }) => {\n  const [state, dispatch] = React.useReducer(reducer, initialValues);\n\n  return (\n    <DispatchContext.Provider value={dispatch}>\n      <StateContext.Provider value={state}>{children}</StateContext.Provider>\n    </DispatchContext.Provider>\n  );\n};\nexport default Provider;\n\n// Wrap your root component in the exported provider.\n// This example uses Gatsby, in a normal React project wrap the App.js\nexport const wrapRootElement = ({ element }) => (\n      <Provider>{element}</Provider>\n);\n\n// Usage\n  const dispatch = React.useContext(DispatchContext);\n  const state = React.useContext(StateContext);\n\n  // Update state =>\n  dispatch({ type: 'name', payload: e.target.value });\n\n  // Access state => \n  <p>{state.name}</p>","position":{"start":{"line":438,"column":1,"offset":8868},"end":{"line":485,"column":4,"offset":10161},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"export","value":"export const _frontmatter = {}","position":{"start":{"line":488,"column":1,"offset":10165},"end":{"line":488,"column":31,"offset":10195},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":488,"column":31,"offset":10195}}},"scopeImports":["import { Box } from \"theme-ui\";","import AccentBox from \"../../site/blog/accent-box.js\";","import Text from \"../../../../posts/posts-components/linear-gradient-text.js\";","import React from 'react'"],"scopeIdentifiers":["Box","AccentBox","Text","React"],"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar LinearGradientText = makeShortcode(\"LinearGradientText\");\nvar H3 = makeShortcode(\"H3\");\nvar Glitch = makeShortcode(\"Glitch\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", {\n    \"id\": \"responsive-css-grid\"\n  }, \"Responsive css grid\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \"<section\\n  sx={{\\n    margin: \\\"2em auto\\\",\\n    display: \\\"grid\\\",\\n    gridAutoRows: \\\"auto\\\",\\n    gridTemplateColumns: \\\"repeat(auto-fill, minmax(auto, 450px))\\\",\\n    gap: \\\"1.5em\\\",\\n    justifyContent: \\\"space-evenly\\\",\\n    width: \\\"100%\\\"\\n  }}\\n>\\n  <div>Box 1</div>\\n  <div>Box 2</div>\\n  <div>Box 3</div>\\n  <div>Box 4</div>\\n</section>\\n\")), mdx(\"hr\", null), mdx(\"h2\", {\n    \"id\": \"linear-gradient-background-to-text\"\n  }, \"Linear gradient background to text\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \"\\n  const GradientText = styled.p`\\n  background-image: linear-gradient(\\n      90deg,\\n      rgba(127, 9, 9, 1) 0%,\\n      rgba(255, 197, 0, 1) 12%,\\n      rgba(238, 225, 23, 1) 24%\\n      );\\n  background-size: 100%;\\n  background-repeat: repeat;\\n  -webkit-background-clip: text;\\n  -webkit-text-fill-color: transparent;\\n  `\\n\\n  <GradientText>Check out my beautiful colours!</GradientText>\\n\\n\")), mdx(LinearGradientText, {\n    mdxType: \"LinearGradientText\"\n  }, \"Check out my beautiful colours!\"), mdx(\"hr\", null), mdx(\"h2\", {\n    \"id\": \"global-styles-from-emotion\"\n  }, \"Global styles from Emotion\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \"import { Global, css } from \\\"@emotion/core\\\";\\n\\n<Global\\n  styles={css`\\n    * {\\n      margin: 0;\\n      padding: 0;\\n      box-sizing: border-box;\\n    }\\n    body {\\n      scroll-behavior: smooth;\\n      overflow-y: scroll;\\n      -webkit-overflow-scrolling: touch;\\n      width: 100%;\\n      overflow-x: hidden;\\n    }\\n  `}\\n/>;\\n\")), mdx(\"hr\", null), mdx(\"h2\", {\n    \"id\": \"svg-icon-with-theme-ui-color-mode\"\n  }, \"Svg Icon with Theme-ui color mode\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \"/** @jsx jsx */\\nimport { jsx, useColorMode } from \\\"theme-ui\\\";\\nimport Github from \\\"../../assets/github.svg\\\";\\n\\nexport const GithubIcon = () => {\\n  const [colorMode] = useColorMode();\\n  return (\\n    <Github\\n      sx={{\\n        width: \\\"1.5em\\\",\\n        height: \\\"1.5em\\\",\\n        fill: \\\"accent\\\",\\n        marginBottom: \\\"1em\\\",\\n        \\\":hover\\\": {\\n          fill: colorMode === \\\"light\\\" ? \\\"#ffffff\\\" : \\\"#000000\\\"\\n        }\\n      }}\\n    />\\n  );\\n};\\n\")), mdx(\"hr\", null), mdx(\"h2\", {\n    \"id\": \"navbar-in-gatsby\"\n  }, \"Navbar in Gatsby\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \"/** @jsx jsx */\\nimport { jsx } from \\\"theme-ui\\\";\\nimport { Link } from \\\"gatsby\\\";\\n\\nconst Nav = () => {\\n  const { siteName } = useSiteMetadata();\\n  return (\\n    <nav\\n      sx={{\\n        display: \\\"flex\\\",\\n        justifyContent: [\\\"center\\\", \\\"space-between\\\", \\\"space-around\\\"],\\n        alignItems: \\\"center\\\",\\n        width: \\\"100%\\\",\\n        height: \\\"100%\\\",\\n        position: \\\"relative\\\"\\n      }}\\n    >\\n      <Link\\n        sx={{\\n          textDecoration: \\\"none\\\",\\n          fontFamily: \\\"heading\\\",\\n          fontSize: [\\\"0.8em\\\", \\\"0.9em\\\", \\\"1em\\\"],\\n          color: \\\"text\\\",\\n          paddingTop: [\\\"1em\\\", null, null],\\n          letterSpacing: \\\"text\\\",\\n          \\\":hover\\\": {\\n            color: \\\"accent\\\"\\n          }\\n        }}\\n        to=\\\"/\\\"\\n      >\\n        {siteName}\\n      </Link>\\n      <Link\\n        sx={{\\n          textDecoration: \\\"none\\\",\\n          fontFamily: \\\"heading\\\",\\n          fontSize: [\\\"0.8em\\\", \\\"0.9em\\\", \\\"0.9em\\\"],\\n          color: \\\"text\\\",\\n          paddingTop: [\\\"1em\\\", null, null],\\n          letterSpacing: \\\"text\\\",\\n          textTransform: \\\"uppercase\\\",\\n          display: [\\\"none\\\", \\\"block\\\", \\\"block\\\"],\\n          \\\":hover\\\": {\\n            color: \\\"accent\\\"\\n          }\\n        }}\\n        to=\\\"/copy-paste\\\"\\n      >\\n        Copy/Paste\\n      </Link>\\n    </nav>\\n  );\\n};\\n\")), mdx(\"hr\", null), mdx(\"h2\", {\n    \"id\": \"theme-ui-preset\"\n  }, \"Theme-ui preset\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"export default {\\n  initialColorMode: \\\"dark\\\",\\n  useCustomProperties: false,\\n  fonts: {\\n    body: \\\"Jost\\\",\\n    heading: \\\"Jost\\\"\\n  },\\n  fontWeights: {\\n    body: 300,\\n    heading: 400,\\n    bold: 700\\n  },\\n  lineHeights: {\\n    body: \\\"110%\\\",\\n    heading: 1.125,\\n    tagline: \\\"100px\\\"\\n  },\\n  letterSpacing: {\\n    body: \\\"1px\\\",\\n    text: \\\"5px\\\"\\n  },\\n  colors: {\\n    text: \\\"#FFFfff\\\",\\n    background: \\\"#121212\\\",\\n    primary: \\\"#000010\\\",\\n    secondary: \\\"#E7E7E9\\\",\\n    secondaryDarker: \\\"#0F1218\\\",\\n    accent: \\\"#DE3C4B\\\",\\n    modes: {\\n      dark: {\\n        text: \\\"#000010\\\",\\n        background: \\\"#E7E7E9\\\",\\n        primary: \\\"#000010\\\",\\n        secondary: \\\"#E7E7E9\\\",\\n        secondaryDarker: \\\"#0F1218\\\",\\n        accent: \\\"#DE3C4B\\\"\\n      }\\n    }\\n  },\\n  breakpoints: [\\\"40em\\\", \\\"56em\\\", \\\"64em\\\"]\\n};\\n\")), mdx(\"hr\", null), mdx(\"h2\", {\n    \"id\": \"breakpoints-areas-for-grid\"\n  }, \"Breakpoints areas for grid\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"export const PhoneTemplateAreas = `\\n  'nav      nav     nav     nav'\\n  'main     main    main    main'\\n  'footer   footer  footer  footer'\\n`;\\n\\nexport const TabletTemplateAreas = `\\n  'nav      nav     nav     nav     nav     nav'\\n  'main     main    main    main    main    main'\\n  'footer   footer  footer  footer  footer  footer'\\n`;\\n\\nexport const DesktopTemplateAreas = `\\n  '.    nav      nav     nav     nav     nav     nav    .'\\n  '.    main     main    main    main    main    main   .'\\n  '.    footer   footer  footer  footer  footer  footer .'\\n`;\\n\")), mdx(\"hr\", null), mdx(\"h2\", {\n    \"id\": \"set-up-apollo-with-gatsby-and-netlify-functions\"\n  }, \"Set up Apollo with Gatsby and Netlify Functions\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \"// gatsby-browser.js && gatsby-ssr.js\\n\\nconst React = require(\\\"react\\\");\\nconst fetch = require(\\\"isomorphic-fetch\\\");\\nconst {\\n  ApolloProvider,\\n  ApolloClient,\\n  HttpLink,\\n  InMemoryCache\\n} = require(\\\"@apollo/client\\\");\\n\\nconst client = new ApolloClient({\\n  cache: new InMemoryCache(),\\n  link: new HttpLink({\\n    uri: \\\"https://my-app.netlify.app/.netlify/functions/graphql\\\"\\n  }),\\n  fetch\\n});\\n\\nexport const wrapRootElement = ({ element }) => (\\n  <ApolloProvider client={client}>{element}</ApolloProvider>\\n);\\n\")), mdx(\"hr\", null), mdx(\"h2\", {\n    \"id\": \"glitch-text\"\n  }, \"Glitch text\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \"import React from \\\"react\\\";\\nimport styled from \\\"@emotion/styled\\\";\\n\\nconst Container = styled.div`\\n  position: relative;\\n\\n  &:hover {\\n    &:before {\\n      content: attr(data-text);\\n      position: absolute;\\n      top: 0;\\n      left: 0;\\n      width: 100%;\\n      height: 100%;\\n\\n      left: 2px;\\n      text-shadow: -1px 0 #de3c4b;\\n      background: #121212;\\n\\n      overflow: hidden;\\n      animation: noise-anim-2 5s infinite linear alternate-reverse;\\n    }\\n\\n    &:after {\\n      content: attr(data-text);\\n      position: absolute;\\n      top: 0;\\n      left: 0;\\n      width: 100%;\\n      height: 100%;\\n\\n      left: -2px;\\n      text-shadow: -1px 0 #de3c4b;\\n      background: #121212;\\n      overflow: hidden;\\n      animation: noise-anim 2s infinite linear alternate-reverse;\\n    }\\n\\n    @keyframes noise-anim {\\n      0% {\\n        clip-path: inset(100% 0 1% 0);\\n      }\\n      5% {\\n        clip-path: inset(45% 0 41% 0);\\n      }\\n      10% {\\n        clip-path: inset(8% 0 18% 0);\\n      }\\n      15% {\\n        clip-path: inset(94% 0 7% 0);\\n      }\\n      20% {\\n        clip-path: inset(23% 0 69% 0);\\n      }\\n      25% {\\n        clip-path: inset(21% 0 28% 0);\\n      }\\n      30% {\\n        clip-path: inset(92% 0 3% 0);\\n      }\\n      35% {\\n        clip-path: inset(2% 0 35% 0);\\n      }\\n      40% {\\n        clip-path: inset(80% 0 1% 0);\\n      }\\n      45% {\\n        clip-path: inset(75% 0 9% 0);\\n      }\\n      50% {\\n        clip-path: inset(37% 0 3% 0);\\n      }\\n      55% {\\n        clip-path: inset(59% 0 3% 0);\\n      }\\n      60% {\\n        clip-path: inset(26% 0 67% 0);\\n      }\\n      65% {\\n        clip-path: inset(75% 0 19% 0);\\n      }\\n      70% {\\n        clip-path: inset(84% 0 2% 0);\\n      }\\n      75% {\\n        clip-path: inset(92% 0 6% 0);\\n      }\\n      80% {\\n        clip-path: inset(10% 0 58% 0);\\n      }\\n      85% {\\n        clip-path: inset(58% 0 23% 0);\\n      }\\n      90% {\\n        clip-path: inset(20% 0 59% 0);\\n      }\\n      95% {\\n        clip-path: inset(50% 0 32% 0);\\n      }\\n      100% {\\n        clip-path: inset(69% 0 9% 0);\\n      }\\n    }\\n  }\\n`;\\n\\nexport default ({ children }) => {\\n  return <Container data-text={children}>{children}</Container>;\\n};\\n\\n<h3>\\n  <Glitch>Hover over me and watch me wobble (or click me on mobile)</Glitch>\\n</h3>;\\n\")), mdx(H3, {\n    mdxType: \"H3\"\n  }, mdx(Glitch, {\n    mdxType: \"Glitch\"\n  }, \"Hover over me and watch me wobble (or click me on mobile)\")), mdx(\"hr\", null), mdx(\"h2\", {\n    \"id\": \"load-custom-font-in-gatsby\"\n  }, \"Load custom font in Gatsby\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"// gatsby-ssr.js\\n\\nconst React = require(\\\"react\\\");\\nexport const onRenderBody = ({ setHeadComponents }) => {\\n  setHeadComponents([\\n    <link\\n      rel=\\\"stylesheet\\\"\\n      href=\\\"https://indestructibletype.com/fonts/Jost.css\\\"\\n      type=\\\"text/css\\\"\\n      charset=\\\"utf-8\\\"\\n    />\\n  ]);\\n};\\n\\n// Can then be accessed like: font-family: Jost in your code\\n\")), mdx(\"hr\", null), mdx(\"h2\", {\n    \"id\": \"base-scripts-for-gatsby-project\"\n  }, \"Base scripts for Gatsby project\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-json\"\n  }), \"\\n// package.json\\n// Assumes you have prettier installed\\n\\n  \\\"scripts\\\": {\\n    \\\"dev\\\": \\\"gatsby develop\\\",\\n    \\\"build\\\": \\\"gatsby build\\\",\\n    \\\"clean\\\": \\\"gatsby clean\\\",\\n    \\\"pretty-check\\\": \\\"prettier --check \\\\\\\"src/**/*.{js}\\\\\\\"\\\",\\n    \\\"pretty\\\": \\\"prettier --write \\\\\\\"src/**/*js\\\\\\\"\\\",\\n    \\\"sitemap\\\": \\\"gatsby build && gatsby serve\\\",\\n    \\\"z\\\": \\\"gatsby clean && gatsby develop\\\"\\n  },\\n    \\\"prettier\\\": {\\n    \\\"singleQuote\\\": false,\\n    \\\"printWidth\\\": 80,\\n    \\\"proseWrap\\\": \\\"always\\\"\\n  }\\n\")), mdx(\"h2\", {\n    \"id\": \"state-management-w-context\"\n  }, \"State management w/ context\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \"// Create a your context using a reducer to manage the state\\n// Wrap your root component in the exported provider\\nimport React from 'react';\\n\\nexport const StateContext = React.createContext(null);\\nexport const DispatchContext = React.createContext(null);\\n\\nconst initialValues = {\\n  name: '',\\n  email: '',\\n  location: '',\\n  description: '',\\n  website: '',\\n}\\n\\nconst reducer = (state, action) => {\\n  const { type, payload } = action;\\n  return { ...state, [type]: payload };\\n};\\n\\nconst Provider = ({ children }) => {\\n  const [state, dispatch] = React.useReducer(reducer, initialValues);\\n\\n  return (\\n    <DispatchContext.Provider value={dispatch}>\\n      <StateContext.Provider value={state}>{children}</StateContext.Provider>\\n    </DispatchContext.Provider>\\n  );\\n};\\nexport default Provider;\\n\\n// Wrap your root component in the exported provider.\\n// This example uses Gatsby, in a normal React project wrap the App.js\\nexport const wrapRootElement = ({ element }) => (\\n      <Provider>{element}</Provider>\\n);\\n\\n// Usage\\n  const dispatch = React.useContext(DispatchContext);\\n  const state = React.useContext(StateContext);\\n\\n  // Update state =>\\n  dispatch({ type: 'name', payload: e.target.value });\\n\\n  // Access state => \\n  <p>{state.name}</p>\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\nimport { Box } from \"theme-ui\";\nimport AccentBox from \"../../site/blog/accent-box.js\";\nimport Text from \"../../../../posts/posts-components/linear-gradient-text.js\";\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\nconst LinearGradientText = makeShortcode(\"LinearGradientText\");\nconst H3 = makeShortcode(\"H3\");\nconst Glitch = makeShortcode(\"Glitch\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h2 {...{\n      \"id\": \"responsive-css-grid\"\n    }}>{`Responsive css grid`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`<section\n  sx={{\n    margin: \"2em auto\",\n    display: \"grid\",\n    gridAutoRows: \"auto\",\n    gridTemplateColumns: \"repeat(auto-fill, minmax(auto, 450px))\",\n    gap: \"1.5em\",\n    justifyContent: \"space-evenly\",\n    width: \"100%\"\n  }}\n>\n  <div>Box 1</div>\n  <div>Box 2</div>\n  <div>Box 3</div>\n  <div>Box 4</div>\n</section>\n`}</code></pre>\n    <hr></hr>\n    <h2 {...{\n      \"id\": \"linear-gradient-background-to-text\"\n    }}>{`Linear gradient background to text`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`\n  const GradientText = styled.p\\`\n  background-image: linear-gradient(\n      90deg,\n      rgba(127, 9, 9, 1) 0%,\n      rgba(255, 197, 0, 1) 12%,\n      rgba(238, 225, 23, 1) 24%\n      );\n  background-size: 100%;\n  background-repeat: repeat;\n  -webkit-background-clip: text;\n  -webkit-text-fill-color: transparent;\n  \\`\n\n  <GradientText>Check out my beautiful colours!</GradientText>\n\n`}</code></pre>\n    <LinearGradientText mdxType=\"LinearGradientText\">Check out my beautiful colours!</LinearGradientText>\n    <hr></hr>\n    <h2 {...{\n      \"id\": \"global-styles-from-emotion\"\n    }}>{`Global styles from Emotion`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`import { Global, css } from \"@emotion/core\";\n\n<Global\n  styles={css\\`\n    * {\n      margin: 0;\n      padding: 0;\n      box-sizing: border-box;\n    }\n    body {\n      scroll-behavior: smooth;\n      overflow-y: scroll;\n      -webkit-overflow-scrolling: touch;\n      width: 100%;\n      overflow-x: hidden;\n    }\n  \\`}\n/>;\n`}</code></pre>\n    <hr></hr>\n    <h2 {...{\n      \"id\": \"svg-icon-with-theme-ui-color-mode\"\n    }}>{`Svg Icon with Theme-ui color mode`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`/** @jsx jsx */\nimport { jsx, useColorMode } from \"theme-ui\";\nimport Github from \"../../assets/github.svg\";\n\nexport const GithubIcon = () => {\n  const [colorMode] = useColorMode();\n  return (\n    <Github\n      sx={{\n        width: \"1.5em\",\n        height: \"1.5em\",\n        fill: \"accent\",\n        marginBottom: \"1em\",\n        \":hover\": {\n          fill: colorMode === \"light\" ? \"#ffffff\" : \"#000000\"\n        }\n      }}\n    />\n  );\n};\n`}</code></pre>\n    <hr></hr>\n    <h2 {...{\n      \"id\": \"navbar-in-gatsby\"\n    }}>{`Navbar in Gatsby`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`/** @jsx jsx */\nimport { jsx } from \"theme-ui\";\nimport { Link } from \"gatsby\";\n\nconst Nav = () => {\n  const { siteName } = useSiteMetadata();\n  return (\n    <nav\n      sx={{\n        display: \"flex\",\n        justifyContent: [\"center\", \"space-between\", \"space-around\"],\n        alignItems: \"center\",\n        width: \"100%\",\n        height: \"100%\",\n        position: \"relative\"\n      }}\n    >\n      <Link\n        sx={{\n          textDecoration: \"none\",\n          fontFamily: \"heading\",\n          fontSize: [\"0.8em\", \"0.9em\", \"1em\"],\n          color: \"text\",\n          paddingTop: [\"1em\", null, null],\n          letterSpacing: \"text\",\n          \":hover\": {\n            color: \"accent\"\n          }\n        }}\n        to=\"/\"\n      >\n        {siteName}\n      </Link>\n      <Link\n        sx={{\n          textDecoration: \"none\",\n          fontFamily: \"heading\",\n          fontSize: [\"0.8em\", \"0.9em\", \"0.9em\"],\n          color: \"text\",\n          paddingTop: [\"1em\", null, null],\n          letterSpacing: \"text\",\n          textTransform: \"uppercase\",\n          display: [\"none\", \"block\", \"block\"],\n          \":hover\": {\n            color: \"accent\"\n          }\n        }}\n        to=\"/copy-paste\"\n      >\n        Copy/Paste\n      </Link>\n    </nav>\n  );\n};\n`}</code></pre>\n    <hr></hr>\n    <h2 {...{\n      \"id\": \"theme-ui-preset\"\n    }}>{`Theme-ui preset`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`export default {\n  initialColorMode: \"dark\",\n  useCustomProperties: false,\n  fonts: {\n    body: \"Jost\",\n    heading: \"Jost\"\n  },\n  fontWeights: {\n    body: 300,\n    heading: 400,\n    bold: 700\n  },\n  lineHeights: {\n    body: \"110%\",\n    heading: 1.125,\n    tagline: \"100px\"\n  },\n  letterSpacing: {\n    body: \"1px\",\n    text: \"5px\"\n  },\n  colors: {\n    text: \"#FFFfff\",\n    background: \"#121212\",\n    primary: \"#000010\",\n    secondary: \"#E7E7E9\",\n    secondaryDarker: \"#0F1218\",\n    accent: \"#DE3C4B\",\n    modes: {\n      dark: {\n        text: \"#000010\",\n        background: \"#E7E7E9\",\n        primary: \"#000010\",\n        secondary: \"#E7E7E9\",\n        secondaryDarker: \"#0F1218\",\n        accent: \"#DE3C4B\"\n      }\n    }\n  },\n  breakpoints: [\"40em\", \"56em\", \"64em\"]\n};\n`}</code></pre>\n    <hr></hr>\n    <h2 {...{\n      \"id\": \"breakpoints-areas-for-grid\"\n    }}>{`Breakpoints areas for grid`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`export const PhoneTemplateAreas = \\`\n  'nav      nav     nav     nav'\n  'main     main    main    main'\n  'footer   footer  footer  footer'\n\\`;\n\nexport const TabletTemplateAreas = \\`\n  'nav      nav     nav     nav     nav     nav'\n  'main     main    main    main    main    main'\n  'footer   footer  footer  footer  footer  footer'\n\\`;\n\nexport const DesktopTemplateAreas = \\`\n  '.    nav      nav     nav     nav     nav     nav    .'\n  '.    main     main    main    main    main    main   .'\n  '.    footer   footer  footer  footer  footer  footer .'\n\\`;\n`}</code></pre>\n    <hr></hr>\n    <h2 {...{\n      \"id\": \"set-up-apollo-with-gatsby-and-netlify-functions\"\n    }}>{`Set up Apollo with Gatsby and Netlify Functions`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`// gatsby-browser.js && gatsby-ssr.js\n\nconst React = require(\"react\");\nconst fetch = require(\"isomorphic-fetch\");\nconst {\n  ApolloProvider,\n  ApolloClient,\n  HttpLink,\n  InMemoryCache\n} = require(\"@apollo/client\");\n\nconst client = new ApolloClient({\n  cache: new InMemoryCache(),\n  link: new HttpLink({\n    uri: \"https://my-app.netlify.app/.netlify/functions/graphql\"\n  }),\n  fetch\n});\n\nexport const wrapRootElement = ({ element }) => (\n  <ApolloProvider client={client}>{element}</ApolloProvider>\n);\n`}</code></pre>\n    <hr></hr>\n    <h2 {...{\n      \"id\": \"glitch-text\"\n    }}>{`Glitch text`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`import React from \"react\";\nimport styled from \"@emotion/styled\";\n\nconst Container = styled.div\\`\n  position: relative;\n\n  &:hover {\n    &:before {\n      content: attr(data-text);\n      position: absolute;\n      top: 0;\n      left: 0;\n      width: 100%;\n      height: 100%;\n\n      left: 2px;\n      text-shadow: -1px 0 #de3c4b;\n      background: #121212;\n\n      overflow: hidden;\n      animation: noise-anim-2 5s infinite linear alternate-reverse;\n    }\n\n    &:after {\n      content: attr(data-text);\n      position: absolute;\n      top: 0;\n      left: 0;\n      width: 100%;\n      height: 100%;\n\n      left: -2px;\n      text-shadow: -1px 0 #de3c4b;\n      background: #121212;\n      overflow: hidden;\n      animation: noise-anim 2s infinite linear alternate-reverse;\n    }\n\n    @keyframes noise-anim {\n      0% {\n        clip-path: inset(100% 0 1% 0);\n      }\n      5% {\n        clip-path: inset(45% 0 41% 0);\n      }\n      10% {\n        clip-path: inset(8% 0 18% 0);\n      }\n      15% {\n        clip-path: inset(94% 0 7% 0);\n      }\n      20% {\n        clip-path: inset(23% 0 69% 0);\n      }\n      25% {\n        clip-path: inset(21% 0 28% 0);\n      }\n      30% {\n        clip-path: inset(92% 0 3% 0);\n      }\n      35% {\n        clip-path: inset(2% 0 35% 0);\n      }\n      40% {\n        clip-path: inset(80% 0 1% 0);\n      }\n      45% {\n        clip-path: inset(75% 0 9% 0);\n      }\n      50% {\n        clip-path: inset(37% 0 3% 0);\n      }\n      55% {\n        clip-path: inset(59% 0 3% 0);\n      }\n      60% {\n        clip-path: inset(26% 0 67% 0);\n      }\n      65% {\n        clip-path: inset(75% 0 19% 0);\n      }\n      70% {\n        clip-path: inset(84% 0 2% 0);\n      }\n      75% {\n        clip-path: inset(92% 0 6% 0);\n      }\n      80% {\n        clip-path: inset(10% 0 58% 0);\n      }\n      85% {\n        clip-path: inset(58% 0 23% 0);\n      }\n      90% {\n        clip-path: inset(20% 0 59% 0);\n      }\n      95% {\n        clip-path: inset(50% 0 32% 0);\n      }\n      100% {\n        clip-path: inset(69% 0 9% 0);\n      }\n    }\n  }\n\\`;\n\nexport default ({ children }) => {\n  return <Container data-text={children}>{children}</Container>;\n};\n\n<h3>\n  <Glitch>Hover over me and watch me wobble (or click me on mobile)</Glitch>\n</h3>;\n`}</code></pre>\n    <H3 mdxType=\"H3\">\n  <Glitch mdxType=\"Glitch\">Hover over me and watch me wobble (or click me on mobile)</Glitch>\n    </H3>\n    <hr></hr>\n    <h2 {...{\n      \"id\": \"load-custom-font-in-gatsby\"\n    }}>{`Load custom font in Gatsby`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`// gatsby-ssr.js\n\nconst React = require(\"react\");\nexport const onRenderBody = ({ setHeadComponents }) => {\n  setHeadComponents([\n    <link\n      rel=\"stylesheet\"\n      href=\"https://indestructibletype.com/fonts/Jost.css\"\n      type=\"text/css\"\n      charset=\"utf-8\"\n    />\n  ]);\n};\n\n// Can then be accessed like: font-family: Jost in your code\n`}</code></pre>\n    <hr></hr>\n    <h2 {...{\n      \"id\": \"base-scripts-for-gatsby-project\"\n    }}>{`Base scripts for Gatsby project`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`\n// package.json\n// Assumes you have prettier installed\n\n  \"scripts\": {\n    \"dev\": \"gatsby develop\",\n    \"build\": \"gatsby build\",\n    \"clean\": \"gatsby clean\",\n    \"pretty-check\": \"prettier --check \\\\\"src/**/*.{js}\\\\\"\",\n    \"pretty\": \"prettier --write \\\\\"src/**/*js\\\\\"\",\n    \"sitemap\": \"gatsby build && gatsby serve\",\n    \"z\": \"gatsby clean && gatsby develop\"\n  },\n    \"prettier\": {\n    \"singleQuote\": false,\n    \"printWidth\": 80,\n    \"proseWrap\": \"always\"\n  }\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"state-management-w-context\"\n    }}>{`State management w/ context`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`// Create a your context using a reducer to manage the state\n// Wrap your root component in the exported provider\nimport React from 'react';\n\nexport const StateContext = React.createContext(null);\nexport const DispatchContext = React.createContext(null);\n\nconst initialValues = {\n  name: '',\n  email: '',\n  location: '',\n  description: '',\n  website: '',\n}\n\nconst reducer = (state, action) => {\n  const { type, payload } = action;\n  return { ...state, [type]: payload };\n};\n\nconst Provider = ({ children }) => {\n  const [state, dispatch] = React.useReducer(reducer, initialValues);\n\n  return (\n    <DispatchContext.Provider value={dispatch}>\n      <StateContext.Provider value={state}>{children}</StateContext.Provider>\n    </DispatchContext.Provider>\n  );\n};\nexport default Provider;\n\n// Wrap your root component in the exported provider.\n// This example uses Gatsby, in a normal React project wrap the App.js\nexport const wrapRootElement = ({ element }) => (\n      <Provider>{element}</Provider>\n);\n\n// Usage\n  const dispatch = React.useContext(DispatchContext);\n  const state = React.useContext(StateContext);\n\n  // Update state =>\n  dispatch({ type: 'name', payload: e.target.value });\n\n  // Access state => \n  <p>{state.name}</p>\n`}</code></pre>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}